
<body>

    <div id="vendorController">

        



<div id="contactSupportModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">

	<div class="modal-dialog">

		<div class="modal-content">

			<div class="modal-header">

				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

				<span class="glyphicon glyphicon-user"></span>

				<span class="modal-title">Contact Support</span>

			</div>

			<div class="modal-body" style="padding-top: 0px; padding-bottom: 0px;">

				<form id="frmContactSupport" class="form-horizontal">

					<div class="form-group">

						<div class="col-md-12" style="margin-top: 5px;">

							<label>For questions related to your assignments, please contact us using the information below.</label>

						</div>

					</div>

					<div class="form-group">

						<div class="col-md-10" style="padding-left: 30px;">

							<h4 class="section-title">Contact Info<span></span></h4>

							<address>

								<ul>

									<li><i class="glyphicon glyphicon-home" style="padding-right: 10px;"></i><strong>Address:</strong> 2600 Bellingham Dr #100, Troy, MI, 48083</li>

									<li><i class="glyphicon glyphicon-phone" style="padding-right: 10px;"></i><strong>Telephone:</strong> 248-955-9422</li>

									<li><i class="glyphicon glyphicon-envelope" style="padding-right: 10px;"></i><strong>E-mail:</strong> <a href="mailto:visupport@classvaluation.com">visupport@classvaluation.com</a></li>

									<li><i class="glyphicon glyphicon-globe" style="padding-right: 10px;"></i><strong>Website:</strong> <a href="http://www.classvaluation.com" target="_blank" >http://www.classvaluation.com</a></li>

								</ul>

							</address>

						</div>

					</div>

				</form>

			</div>

			<div class="modal-footer">

				<button class="btn btn-default" data-dismiss="modal">Close</button>

			</div>

		</div>

	</div>

</div>



<script type="text/javascript">



    $(document).ready(function () {

		$('#contactSupportModal').clearvaluecontactsupportmodal();

    });



    // ClearValueContactSupportModal : ClearValueModal

    (function ($) {

        'use strict';



        var _parent = $.fn.clearvaluemodal;



        var ClearValueContactSupportModal = function (element, options) {

            _parent.Constructor.apply(this, arguments);



        this.$element.on('show.bs.modal', function () {



			}).on('shown.bs.modal', function () {});

        };



		ClearValueContactSupportModal.DEFAULTS = $.extend({}, _parent.Constructor.DEFAULTS);



		ClearValueContactSupportModal.prototype = $.extend({}, _parent.Constructor.prototype);



		ClearValueContactSupportModal.prototype.clearvaluemodalparent = function () {

            var args = $.makeArray(arguments),

                method = args.shift();

            _parent.Constructor.prototype[method].apply(this, args)

        };



		ClearValueContactSupportModal.prototype.show = function () {

            this.clearvaluemodalparent('show');

        };



		var old = $.fn.clearvaluecontactsupportmodal;



		$.fn.clearvaluecontactsupportmodal = function (option, _relatedTarget) {

            return this.each(function () {

                var $this = $(this),

                    data = $this.data('bs.modal'),

                    options = $.extend({}, ClearValueContactSupportModal.DEFAULTS, $this.data(), typeof option === 'object' && option);



                if (!data) {

					$this.data('bs.modal', (data = new ClearValueContactSupportModal(this, options)));

                }

                if (typeof option === 'string') {

                    data[option](_relatedTarget);

                } else if (options.show) {

                    data.show(_relatedTarget);

                }

            });

        };



		$.fn.clearvaluecontactsupportmodal.Constructor = ClearValueContactSupportModal;



		$.fn.clearvaluecontactsupportmodal.noConflict = function () {

			$.fn.clearvaluecontactsupportmodal = old;

            return this;

        };



    })(jQuery);



</script>



<div id="headerToolbar" class="">

	<div class="container-fluid  clearfix">

			<div class="col-md-12">

				<ul class="nav navbar-nav">



					<li>

						<a href="/Orders/Dashboard" tabindex="1">

							<span class="glyphicon glyphicon-home"></span>Home

						</a>

					</li>

					<li>

						<a href="/Account/ChangePassword" tabindex="2">

							<span class="glyphicon glyphicon-lock"></span>Change Password

						</a>

					</li>

										<li>

						<a id="btnContactSupport" style="cursor: pointer;" tabindex="5">

							<span class="glyphicon glyphicon-user">

							</span>Support

						</a>

					</li>

				</ul>



				<p class="navbar-text pull-right" style="margin-top: 7px;">

					<span style="padding-right: 20px;">You are logged in as: 153346</span><a href="#" onclick="logOff();" style="display: inline-block;">Logout</a>

				</p>

			</div>

	</div>

</div>





<script type="text/javascript">



	$(document).ready(function () {

		$("#btnContactSupport").click(function () {

			$('#contactSupportModal').data('bs.modal').show();

		});

	});

</script>



        







<script type="text/javascript">



    function formatSubjectPropertyAddress(cellvalue, options, rowobject) {

        if (rowobject.SubjectPropertyAddress2)

            return rowobject.SubjectPropertyAddress1 + ' ' + rowobject.SubjectPropertyAddress2;

        else

            return rowobject.SubjectPropertyAddress1;

    }



    function formatRushOrder(cellvalue, options, rowobject) {

        if (rowobject.RushOrder)

            return '<span class="rush-order">RushOrder</span>';

        else

            return '';

    }



    function formatPreventVendorAccess(cellvalue, options, rowobject) {

        if (rowobject.PreventVendorAccess)

            return '<span class="prevent-vendor-access">PreventVendorAccess</span>';

        else

            return '';

    }



</script>



<div class="container-fluid">

    



    <div class="clearfix">

        







<div id="messages" class="clearfix col-md-12">

</div>

    </div>





    <div id="ordersTabs" style="margin-bottom: 15px;">

        <ul class="nav nav-tabs" style="background-color: white;">

            <li id="NewOrdersTab" class="active" style="position: relative;">

                <a data-toggle="tab" href="#NewOrdersTabContent">New Orders</a>

            </li>

            <li id="PendingOrdersTab" style="position: relative;">

                <a data-toggle="tab" href="#PendingOrdersTabContent">Orders In Progress</a>

            </li>

            <li id="CorrectionsTab" style="position: relative;">

                <a data-toggle="tab" href="#CorrectionsTabContent">Corrections Needed</a>

            </li>

            <li id="CompletedOrdersTab" style="position: relative;">

                <a data-toggle="tab" href="#CompletedOrdersTabContent">Completed Orders</a>

            </li>

        </ul>



        <div class="tab-content" style="border-right: 1px solid #ddd; border-left: 1px solid #ddd; border-bottom: 1px solid #ddd;border-top: 0px; overflow: hidden;">

            <div id="NewOrdersTabContent" class="clearfix tab-pane fade active in" style="min-height: 300px; margin-top: 15px; margin-bottom: 15px;">

                



<div class="grid-header clearfix" style="margin: 5px 15px;">

        <p>Rush Orders are highlighted in <span style="color: red;">RED</span>.</p>

        <p>On Hold Orders are highlighted in <span style="color: #e7d174;">YELLOW</span>.</p>

</div>

<div class="grid-panel" style="margin: 0px 15px;">





    <script type="text/javascript">



		function formatISODueDate(cellvalue, options, rowobject) {

			return jqGridJSONDateFormatter(rowobject.DueDate, options, rowobject);

		}





        

        function formatNewOrdersActions(cellvalue, options, rowobject) {

            var html = '<div style="font-size: 16px;">';

            html += '<a href="#" onclick="acceptOrder(\'' + rowobject.OrderKey + '\');">';

            html += '    <span class="glyphicon glyphicon-ok-sign" style="color: green; padding-right: 5px;" rel="tooltip" title="Accept Order"></span>';

            html += '</a>';

            html += '<a href="#" onclick="declineOrder(\'' + rowobject.OrderKey + '\');">';

            html += '    <span class="glyphicon glyphicon-minus-sign" style="color: red; padding-right: 5px;" rel="tooltip" title="Decline Order"></span>';

            html += '</a>';

            html += '<a href="#" onclick="displayMap(\'gridNewOrders\',\'' + rowobject.OrderKey + '\');">';

			html += '    <span class="glyphicon glyphicon-road" style="color: black; padding-right: 5px;" rel="tooltip" title="Map of Subject Property"></span>';

            html += '</a>';

            html += '</div>';

            return html;

        }



        







        function completeNewOrdersGridLoad() {

            $("#gridNewOrders tr.jqgrow:odd").css("background-color", "#f9f9f9");

                 $('#gridNewOrders').find('span.rush-order').closest('tr').css('background-color', '#f2dede');

                 $('#gridNewOrders').find('span.prevent-vendor-access').closest('tr').css('background-color', '#f0e7c5');

            $('#ordersTabs li#NewOrdersTab a').text('New Orders (' + $("#gridNewOrders").jqGrid('getGridParam', 'records') + ')');

            }





    </script>



    <script type="text/javascript">

$(function () {

$('#gridNewOrders').jqGrid({

	url: '/Orders/NewOrders',

	datatype: 'json',

	mtype: 'GET',

	styleUI: 'Bootstrap',

	colModel: [		{ name: 'OrderID', index: 'OrderID', key: false, label: 'Order ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderItemID', index: 'OrderItemID', key: false, label: 'Order Item ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ClientID', index: 'ClientID', key: false, label: 'Client ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Client', index: 'Client', key: false, label: 'Client', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Actions', index: 'Actions', key: false, label: ' ', align: 'left', hidden: false, sortable: false, editable: false, width: 90, formatter: formatNewOrdersActions, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderKey', index: 'OrderKey', key: true, label: 'Order No.', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ProductID', index: 'ProductID', key: false, label: 'Product ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Product', index: 'Product', key: false, label: 'Product', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorProduct', index: 'VendorProduct', key: false, label: 'Product', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AdjustedFee', index: 'AdjustedFee', key: false, label: '<div style="text-align: center; width: 100%;">Fee</div>', align: 'right', hidden: false, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' },

		{ name: 'Reviewer', index: 'Reviewer', key: false, label: 'Reviewer', align: 'left', hidden: true, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress1', index: 'SubjectPropertyAddress1', key: false, label: 'Subject Property Address 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress2', index: 'SubjectPropertyAddress2', key: false, label: 'Subject Property Address 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress', index: 'SubjectPropertyAddress', key: false, label: 'Subject Property', align: 'left', hidden: false, sortable: true, editable: false, width: 300, formatter: formatSubjectPropertyAddress, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyCity', index: 'SubjectPropertyCity', key: false, label: 'City', align: 'left', hidden: false, sortable: true, editable: false, width: 150, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyState', index: 'SubjectPropertyState', key: false, label: '<div style="text-align: center; width: 100%;">State</div>', align: 'center', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyPostalCode', index: 'SubjectPropertyPostalCode', key: false, label: 'Zip', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Latitude', index: 'Latitude', key: false, label: 'Latitude', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Longitude', index: 'Longitude', key: false, label: 'Longitude', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'DueDate', index: 'DueDate', key: false, label: 'Due Date', align: 'left', hidden: false, sortable: true, editable: false, width: 170, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'gz', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'DueDateISO', index: 'DueDateISO', key: false, label: 'Due Date Iso', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatISODueDate, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'RushOrder', index: 'RushOrder', key: false, label: 'Rush Order', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RushOrderFlag', index: 'RushOrderFlag', key: false, label: 'Rush Order Flag', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatRushOrder, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'IsMapAvailable', index: 'IsMapAvailable', key: false, label: 'Is Map Available', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Recipient', index: 'Recipient', key: false, label: 'Client', align: 'left', hidden: false, sortable: true, editable: false, width: 200, formatter: formatRecipient, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientAddress1', index: 'RecipientAddress1', key: false, label: 'Recipient Address 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientAddress2', index: 'RecipientAddress2', key: false, label: 'Recipient Address 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientCity', index: 'RecipientCity', key: false, label: 'Recipient City', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientState', index: 'RecipientState', key: false, label: 'Recipient State', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientPostalCode', index: 'RecipientPostalCode', key: false, label: 'Recipient Postal Code', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'UnhandledComment', index: 'UnhandledComment', key: false, label: 'Unhandled Comment', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Overdue', index: 'Overdue', key: false, label: 'Overdue', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'InspectedDate', index: 'InspectedDate', key: false, label: 'Inspected Date', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'Borrower', index: 'Borrower', key: false, label: 'Borrower', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ServiceRepName', index: 'ServiceRepName', key: false, label: 'Service Rep Name', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AppointmentRequired', index: 'AppointmentRequired', key: false, label: 'Appointment Required', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AnalyticsProviderID', index: 'AnalyticsProviderID', key: false, label: 'Analytics Provider ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ConfirmAppointment', index: 'ConfirmAppointment', key: false, label: 'Confirm Appointment', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LockboxCode', index: 'LockboxCode', key: false, label: 'Lockbox Code', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AssignedDate', index: 'AssignedDate', key: false, label: 'Assigned Date', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptTime1', index: 'SuppliedApptTime1', key: false, label: 'Supplied Appt Time 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptTime2', index: 'SuppliedApptTime2', key: false, label: 'Supplied Appt Time 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptEndTime1', index: 'SuppliedApptEndTime1', key: false, label: 'Supplied Appt End Time 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptEndTime2', index: 'SuppliedApptEndTime2', key: false, label: 'Supplied Appt End Time 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'AllowsConditionals', index: 'AllowsConditionals', key: false, label: 'Allows Conditionals', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'HideClientDetails', index: 'HideClientDetails', key: false, label: 'Hide Client Details', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'TimeSensitiveTaskType', index: 'TimeSensitiveTaskType', key: false, label: 'Time Sensitive Task Type', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorFee', index: 'VendorFee', key: false, label: 'Vendor Fee', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanPurposeID', index: 'LoanPurposeID', key: false, label: 'Loan Purpose ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanPurposeDescription', index: 'LoanPurposeDescription', key: false, label: 'Loan Purpose', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanTypeID', index: 'LoanTypeID', key: false, label: 'Loan Type ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanTypeDescription', index: 'LoanTypeDescription', key: false, label: 'Loan Type', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'FHACaseNumber', index: 'FHACaseNumber', key: false, label: 'Fhacase Number', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanNumber', index: 'LoanNumber', key: false, label: 'Loan Number', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OnHold', index: 'OnHold', key: false, label: 'On Hold', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'PreventVendorAccess', index: 'PreventVendorAccess', key: false, label: 'Prevent Vendor Access', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatPreventVendorAccess, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'EngagementDocumentID', index: 'EngagementDocumentID', key: false, label: 'Engagement Document ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorTechnologyFee', index: 'VendorTechnologyFee', key: false, label: 'Vendor Technology Fee', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' }],

	page: 1,

	pager: '#gridNewOrders-pager',

	rowNum: -1,

	gridComplete: completeNewOrdersGridLoad,

	height: 'auto',

	autowidth: true,

	viewrecords: true,

	gridview: true,

	shrinkToFit: true,

	sortable: false,

	loadonce: false,

	loadui: 'enable',

	caption: '',

	altRows: false,

	search: 'false',

	hidegrid: false,

	resizeStop: function (width, index) {

			if ($('div#gview_gridNewOrders .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridNewOrders .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridNewOrders .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridNewOrders .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		$(window).on('resize', function() {

			if ($('div#gview_gridNewOrders .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridNewOrders .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridNewOrders .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridNewOrders .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		});

	},

	loadError: handleException,

	jsonReader: { root: 'rows', page: 'page', total: 'total', records: 'records', id: 'OrderKey', cells: '', repeatitems: false }

	});

	$('#gridNewOrders').navGrid('#gridNewOrders-pager',{refresh: true, del: false, add: false, view: false, search: false, edit: false},{},{},{},{},{});

});



$(document).ready(function() {

	var stf = $('#gridNewOrders').getGridParam('shrinkToFit');

	if (stf == true)

		$('#gview_gridNewOrders').find('.ui-jqgrid-bdiv').css('overflow-x', 'hidden');

	else

		$('#gview_gridNewOrders').find('.ui-jqgrid-bdiv').css('overflow-x', 'auto');

});



</script>



	<table id="gridNewOrders"><tr><td /></tr></table>





</div>





<script type="text/javascript">



    //Need the original column widths to decide if the jqGrid should "shrinkToFit" or not when resizing

    var colWidthsNewOrders = {};

         colWidthsNewOrders['OrderID'] = 100;

         colWidthsNewOrders['OrderItemID'] = 100;

         colWidthsNewOrders['ClientID'] = 100;

         colWidthsNewOrders['Client'] = 100;

         colWidthsNewOrders['Actions'] = 90;

         colWidthsNewOrders['OrderKey'] = 90;

         colWidthsNewOrders['ProductID'] = 100;

         colWidthsNewOrders['Product'] = 100;

         colWidthsNewOrders['VendorProduct'] = 90;

         colWidthsNewOrders['AdjustedFee'] = 100;

         colWidthsNewOrders['Reviewer'] = 200;

         colWidthsNewOrders['SubjectPropertyAddress1'] = 100;

         colWidthsNewOrders['SubjectPropertyAddress2'] = 100;

         colWidthsNewOrders['SubjectPropertyAddress'] = 300;

         colWidthsNewOrders['SubjectPropertyCity'] = 150;

         colWidthsNewOrders['SubjectPropertyState'] = 90;

         colWidthsNewOrders['SubjectPropertyPostalCode'] = 90;

         colWidthsNewOrders['Latitude'] = 100;

         colWidthsNewOrders['Longitude'] = 100;

         colWidthsNewOrders['DueDate'] = 170;

         colWidthsNewOrders['DueDateISO'] = 100;

         colWidthsNewOrders['RushOrder'] = 100;

         colWidthsNewOrders['RushOrderFlag'] = 100;

         colWidthsNewOrders['IsMapAvailable'] = 100;

         colWidthsNewOrders['Recipient'] = 200;

         colWidthsNewOrders['RecipientAddress1'] = 100;

         colWidthsNewOrders['RecipientAddress2'] = 100;

         colWidthsNewOrders['RecipientCity'] = 100;

         colWidthsNewOrders['RecipientState'] = 100;

         colWidthsNewOrders['RecipientPostalCode'] = 100;

         colWidthsNewOrders['UnhandledComment'] = 100;

         colWidthsNewOrders['Overdue'] = 100;

         colWidthsNewOrders['InspectedDate'] = 100;

         colWidthsNewOrders['Borrower'] = 200;

         colWidthsNewOrders['ServiceRepName'] = 100;

         colWidthsNewOrders['AppointmentRequired'] = 100;

         colWidthsNewOrders['AnalyticsProviderID'] = 100;

         colWidthsNewOrders['ConfirmAppointment'] = 100;

         colWidthsNewOrders['LockboxCode'] = 100;

         colWidthsNewOrders['AssignedDate'] = 100;

         colWidthsNewOrders['SuppliedApptTime1'] = 100;

         colWidthsNewOrders['SuppliedApptTime2'] = 100;

         colWidthsNewOrders['SuppliedApptEndTime1'] = 100;

         colWidthsNewOrders['SuppliedApptEndTime2'] = 100;

         colWidthsNewOrders['AllowsConditionals'] = 100;

         colWidthsNewOrders['HideClientDetails'] = 100;

         colWidthsNewOrders['TimeSensitiveTaskType'] = 100;

         colWidthsNewOrders['VendorFee'] = 100;

         colWidthsNewOrders['LoanPurposeID'] = 100;

         colWidthsNewOrders['LoanPurposeDescription'] = 200;

         colWidthsNewOrders['LoanTypeID'] = 100;

         colWidthsNewOrders['LoanTypeDescription'] = 200;

         colWidthsNewOrders['FHACaseNumber'] = 100;

         colWidthsNewOrders['LoanNumber'] = 100;

         colWidthsNewOrders['OnHold'] = 100;

         colWidthsNewOrders['PreventVendorAccess'] = 100;

         colWidthsNewOrders['EngagementDocumentID'] = 100;

         colWidthsNewOrders['VendorTechnologyFee'] = 100;



    $(document).ready(function () {



        



        $('#acceptOrderModal').on('done.cvc.bs.modal', function () {

        	$('#gridNewOrders').trigger("reloadGrid");

        	$('#gridPendingOrders').trigger("reloadGrid");

        });



        $('#declineOrderModal').on('done.cvc.bs.modal', function () {

        	$('#gridNewOrders').trigger("reloadGrid");

        });



        $('#setAppointmentModal, #confirmAppointmentModal').on('done.cvc.bs.modal', function (event) {

        	$('#gridPendingOrders').trigger("reloadGrid");

        });



        





        $('div#NewOrdersTabContent').on('parentResize.cvc', function () {



                var minGridPanelHeight = 250;

                var contentHeight = $(this).innerHeight();

                var verbiageHeight = $(this).children('.grid-header').outerHeight(true);



                var gridPanel = $(this).find('.grid-panel');

                var newGridPanelHeight = contentHeight - verbiageHeight;

                if (newGridPanelHeight < minGridPanelHeight) {

                    newGridPanelHeight = minGridPanelHeight;

                $(this).css('overflow-y', "scroll");

                }

                else

                $(this).css('overflow-y', "hidden");



            $(gridPanel).outerHeight(newGridPanelHeight, true);



                var $grid = $('#gridNewOrders');

                var $gridBody = $('div#gview_gridNewOrders .ui-jqgrid-bdiv');



                var gridHeaderHeight = $('div#gview_gridNewOrders .ui-jqgrid-hdiv').outerHeight(true);

            $gridBody.height($(gridPanel).innerHeight() - (gridHeaderHeight + 2));



                gridParentWidth = $('#gbox_gridNewOrders').parent().innerWidth();



                if (1970 < gridParentWidth) {

                //avoid a scrollbar for a few pixels

                $gridBody.css('overflow-x', 'hidden');

                $grid.setGridWidth(gridParentWidth, true);

                }

                else {

                $gridBody.css('overflow-x', 'auto');

                $grid.setGridWidth(gridParentWidth, true);

                    setGridColumnsToMinWidth('gridNewOrders', colWidthsNewOrders);

                $grid.jqGrid('setGridParam', { shrinkToFit: false });

                }

            });

        });



    

    function acceptOrder(orderKey) {



        var row = $('#gridNewOrders').getRowData(orderKey);



        $('#acceptOrderModal').data('bs.modal').show(populateOrderInfoFromRow(row));

    }



    function addComment(orderKey) {

    	var row = $('#gridPendingOrders').getRowData(orderKey);



    	$('#addCommentModal').data('bs.modal').show(populateOrderInfoFromRow(row));

    }



    function setAppointment(orderKey) {

    	var row = $('#gridPendingOrders').getRowData(orderKey);



    	$('#setAppointmentModal').data('bs.modal').show(populateOrderInfoFromRow(row));

    }



    function confirmAppointment(orderKey) {

    	var row = $('#gridPendingOrders').getRowData(orderKey);



    	$('#confirmAppointmentModal').data('bs.modal').show(populateOrderInfoFromRow(row));

    }



    function populateOrderInfoFromRow(row) {



        var info = new OrderInfo();

        info.OrderID = row.OrderID;

        info.OrderItemID = row.OrderItemID;

        info.OnHold = row.OnHold == 'true' ? true : false;

        info.RushOrder = row.RushOrder == 'true' ? true : false;

        //Expecting the business logic to allow conditional acceptance has already taken place at this point. Not just ClientProduct.AllowConditionals

        info.AllowConditionalAcceptance = row.AllowsConditionals == 'true' ? true : false;

        info.VendorDueDate = row.DueDateISO;

        info.EngagementDocumentID = row.EngagementDocumentID;

        info.SubjectAddress = row.SubjectPropertyAddress1 + ', ' + row.SubjectPropertyCity + ', ' + row.SubjectPropertyState + ' ' + row.SubjectPropertyPostalCode;

        info.Recipient = row.Recipient;

        info.RecipientAddress = row.RecipientAddress1 + ', ' + row.RecipientCity + ', ' + row.RecipientState + ' ' + row.RecipientPostalCode;

        info.AdjustedVendorFee = row.AdjustedFee;

        info.LoanPurpose = row.LoanPurposeDescription;

        info.Product = row.VendorProduct;

        info.AssignedDate = row.AssignedDate;

        info.InspectionDate = row.InspectedDate;

        info.FHACaseNumber = row.FHACaseNumber;

        info.LoanNumber = row.LoanNumber;

        info.LockBoxCode = row.LockboxCode;

        info.HideClientDetails = row.HideClientDetails == 'true' ? true : false;

        info.SuppliedApptTime1 = row.SuppliedApptTime1;

        info.SuppliedApptTime2 = row.SuppliedApptTime2;

        info.SuppliedApptEndTime1 = row.SuppliedApptEndTime1;

		info.SuppliedApptEndTime2 = row.SuppliedApptEndTime2;

		info.VendorTechnologyFee = row.VendorTechnologyFee;



        return info;

    }



    function declineOrder(orderKey) {

        var row = $('#gridNewOrders').getRowData(orderKey);



        $('#declineOrderModal').data('bs.modal').show(populateOrderInfoFromRow(row));

    }



    function formatRecipient(cellvalue, options, rowobject)

    {

    	if (rowobject.HideClientDetails)

    		return '';

    	else

    		return rowobject.Recipient;

    }



    function formatOrderKeyLink(cellvalue, options, rowobject) {

        return '<a href="/Orders/' + rowobject.OrderID + '/Items/' + rowobject.OrderItemID + '">' + cellvalue + '</a>';

    }



    





</script>





            </div>

            <div id="PendingOrdersTabContent" class="clearfix tab-pane fade" style="margin-top: 15px; margin-bottom: 15px;">

                



<div class="grid-header clearfix" style="margin: 5px 15px;">

        <p>Rush Orders are highlighted in <span style="color: red;">RED</span>.</p>

        <p>On Hold Orders are highlighted in <span style="color: #e7d174;">YELLOW</span>.</p>

</div>

<div class="grid-panel" style="margin: 0px 15px;">





    <script type="text/javascript">



		function formatISODueDate(cellvalue, options, rowobject) {

			return jqGridJSONDateFormatter(rowobject.DueDate, options, rowobject);

		}







        

        function formatPendingOrdersActions(cellvalue, options, rowobject) {



            var html = '<div style="font-size: 16px;">';

            if (rowobject.PreventVendorAccess) {

                html += '    <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-comment" rel="tooltip" title="Add Comment"></span>';

                html += '    <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-calendar" rel="tooltip" title="Set Appointment Time"></span>';

                html += '    <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-bell" rel="tooltip" title="Confirm Appointment"></span>';

                html += '    <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-road" rel="tooltip" title="Map of Subject Property"></span>';

            }

            else {

                html += '    <a href="#" onclick="addComment(\'' + rowobject.OrderKey + '\');">';

                html += '        <span style="color: lightblue; padding-right: 5px;" class="glyphicon glyphicon-comment" rel="tooltip" title="Add Comment"></span>';

                html += '    </a>';



                if (rowobject.AppointmentRequired) {

                    html += '    <a href="#" onclick="setAppointment(\'' + rowobject.OrderKey + '\');">';

                    html += '        <span style="color: red; padding-right: 5px;" class="glyphicon glyphicon-calendar" rel="tooltip" title="Set Appointment Time"></span>';

                    html += '    </a>';

                }

                else

                    html += '    <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-calendar" ></span>';



                var confirmAppointment = rowobject.ConfirmAppointment && rowobject.AppointmentRequired;

                if (confirmAppointment) {

                    html += '    <a href="#" onclick="confirmAppointment(\'' + rowobject.OrderKey + '\');">';

                    html += '        <span style="color: blue; padding-right: 5px;" class="glyphicon glyphicon-bell" rel="tooltip" title="Confirm Appointment"></span>';

                    html += '    </a>';

                }

                else

                    html += '    <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-bell"></span>';





                if (rowobject.IsMapAvailable) {

                    html += '    <a href="#" onclick="displayMap(\'gridPendingOrders\',\'' + rowobject.OrderKey + '\');">';

                    html += '        <span style="color: black; padding-right: 5px;" class="glyphicon glyphicon-road" rel="tooltip" title="Map of Subject Property"></span>';

                    html += '    </a>';

                }

                else

                    html += '    <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-road"></span>';

            }

          

            html += '</div>';

            return html;

        }



        





        function completePendingOrdersGridLoad() {

            $("#gridPendingOrders tr.jqgrow:odd").css("background-color", "#f9f9f9");

                 $('#gridPendingOrders').find('span.rush-order').closest('tr').css('background-color', '#f2dede');

                 $('#gridPendingOrders').find('span.prevent-vendor-access').closest('tr').css('background-color', '#f0e7c5');

            $('#ordersTabs li#PendingOrdersTab a').text('Orders In Progress (' + $("#gridPendingOrders").jqGrid('getGridParam', 'records') + ')');

            }





    </script>



    <script type="text/javascript">

$(function () {

$('#gridPendingOrders').jqGrid({

	url: '/Orders/PendingOrders',

	datatype: 'json',

	mtype: 'GET',

	styleUI: 'Bootstrap',

	colModel: [		{ name: 'OrderID', index: 'OrderID', key: false, label: 'Order ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderItemID', index: 'OrderItemID', key: false, label: 'Order Item ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ClientID', index: 'ClientID', key: false, label: 'Client ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Client', index: 'Client', key: false, label: 'Client', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Actions', index: 'Actions', key: false, label: ' ', align: 'left', hidden: false, sortable: false, editable: false, width: 130, formatter: formatPendingOrdersActions, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderKey', index: 'OrderKey', key: true, label: 'Order No.', align: 'left', hidden: false, sortable: true, editable: false, width: 90, formatter: formatOrderKeyLink, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ProductID', index: 'ProductID', key: false, label: 'Product ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Product', index: 'Product', key: false, label: 'Product', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorProduct', index: 'VendorProduct', key: false, label: 'Product', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AdjustedFee', index: 'AdjustedFee', key: false, label: '<div style="text-align: center; width: 100%;">Fee</div>', align: 'right', hidden: false, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' },

		{ name: 'Reviewer', index: 'Reviewer', key: false, label: 'Reviewer', align: 'left', hidden: true, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress1', index: 'SubjectPropertyAddress1', key: false, label: 'Subject Property Address 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress2', index: 'SubjectPropertyAddress2', key: false, label: 'Subject Property Address 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress', index: 'SubjectPropertyAddress', key: false, label: 'Subject Property', align: 'left', hidden: false, sortable: true, editable: false, width: 300, formatter: formatSubjectPropertyAddress, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyCity', index: 'SubjectPropertyCity', key: false, label: 'City', align: 'left', hidden: false, sortable: true, editable: false, width: 150, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyState', index: 'SubjectPropertyState', key: false, label: '<div style="text-align: center; width: 100%;">State</div>', align: 'center', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyPostalCode', index: 'SubjectPropertyPostalCode', key: false, label: 'Zip', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Latitude', index: 'Latitude', key: false, label: 'Latitude', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Longitude', index: 'Longitude', key: false, label: 'Longitude', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'DueDate', index: 'DueDate', key: false, label: 'Due Date', align: 'left', hidden: false, sortable: true, editable: false, width: 170, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'gz', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'DueDateISO', index: 'DueDateISO', key: false, label: 'Due Date Iso', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatISODueDate, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'RushOrder', index: 'RushOrder', key: false, label: 'Rush Order', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RushOrderFlag', index: 'RushOrderFlag', key: false, label: 'Rush Order Flag', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatRushOrder, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'IsMapAvailable', index: 'IsMapAvailable', key: false, label: 'Is Map Available', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Recipient', index: 'Recipient', key: false, label: 'Client', align: 'left', hidden: false, sortable: true, editable: false, width: 200, formatter: formatRecipient, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientAddress1', index: 'RecipientAddress1', key: false, label: 'Recipient Address 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientAddress2', index: 'RecipientAddress2', key: false, label: 'Recipient Address 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientCity', index: 'RecipientCity', key: false, label: 'Recipient City', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientState', index: 'RecipientState', key: false, label: 'Recipient State', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientPostalCode', index: 'RecipientPostalCode', key: false, label: 'Recipient Postal Code', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'UnhandledComment', index: 'UnhandledComment', key: false, label: 'Unhandled Comment', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Overdue', index: 'Overdue', key: false, label: 'Overdue', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'InspectedDate', index: 'InspectedDate', key: false, label: 'Inspected Date', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'Borrower', index: 'Borrower', key: false, label: 'Borrower', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ServiceRepName', index: 'ServiceRepName', key: false, label: 'Service Rep Name', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AppointmentRequired', index: 'AppointmentRequired', key: false, label: 'Appointment Required', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AnalyticsProviderID', index: 'AnalyticsProviderID', key: false, label: 'Analytics Provider ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ConfirmAppointment', index: 'ConfirmAppointment', key: false, label: 'Confirm Appointment', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LockboxCode', index: 'LockboxCode', key: false, label: 'Lockbox Code', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AssignedDate', index: 'AssignedDate', key: false, label: 'Assigned Date', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptTime1', index: 'SuppliedApptTime1', key: false, label: 'Supplied Appt Time 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptTime2', index: 'SuppliedApptTime2', key: false, label: 'Supplied Appt Time 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptEndTime1', index: 'SuppliedApptEndTime1', key: false, label: 'Supplied Appt End Time 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptEndTime2', index: 'SuppliedApptEndTime2', key: false, label: 'Supplied Appt End Time 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'AllowsConditionals', index: 'AllowsConditionals', key: false, label: 'Allows Conditionals', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'HideClientDetails', index: 'HideClientDetails', key: false, label: 'Hide Client Details', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'TimeSensitiveTaskType', index: 'TimeSensitiveTaskType', key: false, label: 'Time Sensitive Task Type', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorFee', index: 'VendorFee', key: false, label: 'Vendor Fee', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanPurposeID', index: 'LoanPurposeID', key: false, label: 'Loan Purpose ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanPurposeDescription', index: 'LoanPurposeDescription', key: false, label: 'Loan Purpose', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanTypeID', index: 'LoanTypeID', key: false, label: 'Loan Type ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanTypeDescription', index: 'LoanTypeDescription', key: false, label: 'Loan Type', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'FHACaseNumber', index: 'FHACaseNumber', key: false, label: 'Fhacase Number', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanNumber', index: 'LoanNumber', key: false, label: 'Loan Number', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OnHold', index: 'OnHold', key: false, label: 'On Hold', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'PreventVendorAccess', index: 'PreventVendorAccess', key: false, label: 'Prevent Vendor Access', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatPreventVendorAccess, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'EngagementDocumentID', index: 'EngagementDocumentID', key: false, label: 'Engagement Document ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorTechnologyFee', index: 'VendorTechnologyFee', key: false, label: 'Vendor Technology Fee', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' }],

	page: 1,

	pager: '#gridPendingOrders-pager',

	rowNum: -1,

	gridComplete: completePendingOrdersGridLoad,

	height: 'auto',

	autowidth: true,

	viewrecords: true,

	gridview: true,

	shrinkToFit: true,

	sortable: false,

	loadonce: false,

	loadui: 'enable',

	caption: '',

	altRows: false,

	search: 'false',

	hidegrid: false,

	resizeStop: function (width, index) {

			if ($('div#gview_gridPendingOrders .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridPendingOrders .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridPendingOrders .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridPendingOrders .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		$(window).on('resize', function() {

			if ($('div#gview_gridPendingOrders .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridPendingOrders .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridPendingOrders .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridPendingOrders .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		});

	},

	loadError: handleException,

	jsonReader: { root: 'rows', page: 'page', total: 'total', records: 'records', id: 'OrderKey', cells: '', repeatitems: false }

	});

	$('#gridPendingOrders').navGrid('#gridPendingOrders-pager',{refresh: true, del: false, add: false, view: false, search: false, edit: false},{},{},{},{},{});

});



$(document).ready(function() {

	var stf = $('#gridPendingOrders').getGridParam('shrinkToFit');

	if (stf == true)

		$('#gview_gridPendingOrders').find('.ui-jqgrid-bdiv').css('overflow-x', 'hidden');

	else

		$('#gview_gridPendingOrders').find('.ui-jqgrid-bdiv').css('overflow-x', 'auto');

});



</script>



	<table id="gridPendingOrders"><tr><td /></tr></table>





</div>





<script type="text/javascript">



    //Need the original column widths to decide if the jqGrid should "shrinkToFit" or not when resizing

    var colWidthsPendingOrders = {};

         colWidthsPendingOrders['OrderID'] = 100;

         colWidthsPendingOrders['OrderItemID'] = 100;

         colWidthsPendingOrders['ClientID'] = 100;

         colWidthsPendingOrders['Client'] = 100;

         colWidthsPendingOrders['Actions'] = 130;

         colWidthsPendingOrders['OrderKey'] = 90;

         colWidthsPendingOrders['ProductID'] = 100;

         colWidthsPendingOrders['Product'] = 100;

         colWidthsPendingOrders['VendorProduct'] = 90;

         colWidthsPendingOrders['AdjustedFee'] = 100;

         colWidthsPendingOrders['Reviewer'] = 200;

         colWidthsPendingOrders['SubjectPropertyAddress1'] = 100;

         colWidthsPendingOrders['SubjectPropertyAddress2'] = 100;

         colWidthsPendingOrders['SubjectPropertyAddress'] = 300;

         colWidthsPendingOrders['SubjectPropertyCity'] = 150;

         colWidthsPendingOrders['SubjectPropertyState'] = 90;

         colWidthsPendingOrders['SubjectPropertyPostalCode'] = 90;

         colWidthsPendingOrders['Latitude'] = 100;

         colWidthsPendingOrders['Longitude'] = 100;

         colWidthsPendingOrders['DueDate'] = 170;

         colWidthsPendingOrders['DueDateISO'] = 100;

         colWidthsPendingOrders['RushOrder'] = 100;

         colWidthsPendingOrders['RushOrderFlag'] = 100;

         colWidthsPendingOrders['IsMapAvailable'] = 100;

         colWidthsPendingOrders['Recipient'] = 200;

         colWidthsPendingOrders['RecipientAddress1'] = 100;

         colWidthsPendingOrders['RecipientAddress2'] = 100;

         colWidthsPendingOrders['RecipientCity'] = 100;

         colWidthsPendingOrders['RecipientState'] = 100;

         colWidthsPendingOrders['RecipientPostalCode'] = 100;

         colWidthsPendingOrders['UnhandledComment'] = 100;

         colWidthsPendingOrders['Overdue'] = 100;

         colWidthsPendingOrders['InspectedDate'] = 100;

         colWidthsPendingOrders['Borrower'] = 200;

         colWidthsPendingOrders['ServiceRepName'] = 100;

         colWidthsPendingOrders['AppointmentRequired'] = 100;

         colWidthsPendingOrders['AnalyticsProviderID'] = 100;

         colWidthsPendingOrders['ConfirmAppointment'] = 100;

         colWidthsPendingOrders['LockboxCode'] = 100;

         colWidthsPendingOrders['AssignedDate'] = 100;

         colWidthsPendingOrders['SuppliedApptTime1'] = 100;

         colWidthsPendingOrders['SuppliedApptTime2'] = 100;

         colWidthsPendingOrders['SuppliedApptEndTime1'] = 100;

         colWidthsPendingOrders['SuppliedApptEndTime2'] = 100;

         colWidthsPendingOrders['AllowsConditionals'] = 100;

         colWidthsPendingOrders['HideClientDetails'] = 100;

         colWidthsPendingOrders['TimeSensitiveTaskType'] = 100;

         colWidthsPendingOrders['VendorFee'] = 100;

         colWidthsPendingOrders['LoanPurposeID'] = 100;

         colWidthsPendingOrders['LoanPurposeDescription'] = 200;

         colWidthsPendingOrders['LoanTypeID'] = 100;

         colWidthsPendingOrders['LoanTypeDescription'] = 200;

         colWidthsPendingOrders['FHACaseNumber'] = 100;

         colWidthsPendingOrders['LoanNumber'] = 100;

         colWidthsPendingOrders['OnHold'] = 100;

         colWidthsPendingOrders['PreventVendorAccess'] = 100;

         colWidthsPendingOrders['EngagementDocumentID'] = 100;

         colWidthsPendingOrders['VendorTechnologyFee'] = 100;



    $(document).ready(function () {







        $('div#PendingOrdersTabContent').on('parentResize.cvc', function () {



                var minGridPanelHeight = 250;

                var contentHeight = $(this).innerHeight();

                var verbiageHeight = $(this).children('.grid-header').outerHeight(true);



                var gridPanel = $(this).find('.grid-panel');

                var newGridPanelHeight = contentHeight - verbiageHeight;

                if (newGridPanelHeight < minGridPanelHeight) {

                    newGridPanelHeight = minGridPanelHeight;

                $(this).css('overflow-y', "scroll");

                }

                else

                $(this).css('overflow-y', "hidden");



            $(gridPanel).outerHeight(newGridPanelHeight, true);



                var $grid = $('#gridPendingOrders');

                var $gridBody = $('div#gview_gridPendingOrders .ui-jqgrid-bdiv');



                var gridHeaderHeight = $('div#gview_gridPendingOrders .ui-jqgrid-hdiv').outerHeight(true);

            $gridBody.height($(gridPanel).innerHeight() - (gridHeaderHeight + 2));



                gridParentWidth = $('#gbox_gridPendingOrders').parent().innerWidth();



                if (2010 < gridParentWidth) {

                //avoid a scrollbar for a few pixels

                $gridBody.css('overflow-x', 'hidden');

                $grid.setGridWidth(gridParentWidth, true);

                }

                else {

                $gridBody.css('overflow-x', 'auto');

                $grid.setGridWidth(gridParentWidth, true);

                    setGridColumnsToMinWidth('gridPendingOrders', colWidthsPendingOrders);

                $grid.jqGrid('setGridParam', { shrinkToFit: false });

                }

            });

        });







</script>





            </div>

            <div id="CorrectionsTabContent" class="clearfix tab-pane fade" style="margin-top: 15px; margin-bottom: 15px;">

                



<div class="grid-header clearfix" style="margin: 5px 15px;">

</div>

<div class="grid-panel" style="margin: 0px 15px;">





    <script type="text/javascript">



		function formatISODueDate(cellvalue, options, rowobject) {

			return jqGridJSONDateFormatter(rowobject.DueDate, options, rowobject);

		}









        

        function formatCorrectionsActions(cellvalue, options, rowobject) {



            var html = '<div style="font-size: 16px;">';



            html += '           <a href="#" onclick="addCorrectionsComment(\'' + rowobject.OrderKey + '\');">';

            html += '               <span style="color: lightblue; padding-right: 5px;" class="glyphicon glyphicon-comment" rel="tooltip" title="Add Comment"></span>';

            html += '           </a>';







            if (rowobject.IsMapAvailable) {

                html += '           <a href="#" onclick="displayMap(\'gridCorrections\',\'' + rowobject.OrderKey + '\');">';

                html += '               <span style="color: black; padding-right: 5px;" class="glyphicon glyphicon-road" rel="tooltip" title="Map of Subject Property"></span>';

                html += '           </a>';

            }

            else

                html += '           <span style="color: lightgrey; padding-right: 5px;" class="glyphicon glyphicon-road"></span>';



            html += '</div>';

            return html;

        }



        



        function completeCorrectionsGridLoad() {

            $("#gridCorrections tr.jqgrow:odd").css("background-color", "#f9f9f9");

            $('#ordersTabs li#CorrectionsTab a').text('Corrections (' + $("#gridCorrections").jqGrid('getGridParam', 'records') + ')');

            }





    </script>



    <script type="text/javascript">

$(function () {

$('#gridCorrections').jqGrid({

	url: '/Orders/Corrections',

	datatype: 'json',

	mtype: 'GET',

	styleUI: 'Bootstrap',

	colModel: [		{ name: 'OrderID', index: 'OrderID', key: false, label: 'Order ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderItemID', index: 'OrderItemID', key: false, label: 'Order Item ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ClientID', index: 'ClientID', key: false, label: 'Client ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Client', index: 'Client', key: false, label: 'Client', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Actions', index: 'Actions', key: false, label: ' ', align: 'left', hidden: false, sortable: false, editable: false, width: 80, formatter: formatCorrectionsActions, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderKey', index: 'OrderKey', key: true, label: 'Order No.', align: 'left', hidden: false, sortable: true, editable: false, width: 90, formatter: formatOrderKeyLink, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ProductID', index: 'ProductID', key: false, label: 'Product ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Product', index: 'Product', key: false, label: 'Product', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorProduct', index: 'VendorProduct', key: false, label: 'Product', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AdjustedFee', index: 'AdjustedFee', key: false, label: '<div style="text-align: center; width: 100%;">Fee</div>', align: 'right', hidden: false, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' },

		{ name: 'Reviewer', index: 'Reviewer', key: false, label: 'Reviewer', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress1', index: 'SubjectPropertyAddress1', key: false, label: 'Subject Property Address 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress2', index: 'SubjectPropertyAddress2', key: false, label: 'Subject Property Address 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress', index: 'SubjectPropertyAddress', key: false, label: 'Subject Property', align: 'left', hidden: false, sortable: true, editable: false, width: 300, formatter: formatSubjectPropertyAddress, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyCity', index: 'SubjectPropertyCity', key: false, label: 'City', align: 'left', hidden: false, sortable: true, editable: false, width: 150, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyState', index: 'SubjectPropertyState', key: false, label: '<div style="text-align: center; width: 100%;">State</div>', align: 'center', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyPostalCode', index: 'SubjectPropertyPostalCode', key: false, label: 'Zip', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Latitude', index: 'Latitude', key: false, label: 'Latitude', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Longitude', index: 'Longitude', key: false, label: 'Longitude', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'DueDate', index: 'DueDate', key: false, label: 'Due Date', align: 'left', hidden: false, sortable: true, editable: false, width: 170, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'gz', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'DueDateISO', index: 'DueDateISO', key: false, label: 'Due Date Iso', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatISODueDate, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'RushOrder', index: 'RushOrder', key: false, label: 'Rush Order', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RushOrderFlag', index: 'RushOrderFlag', key: false, label: 'Rush Order Flag', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatRushOrder, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'IsMapAvailable', index: 'IsMapAvailable', key: false, label: 'Is Map Available', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Recipient', index: 'Recipient', key: false, label: 'Client', align: 'left', hidden: false, sortable: true, editable: false, width: 200, formatter: formatRecipient, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientAddress1', index: 'RecipientAddress1', key: false, label: 'Recipient Address 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientAddress2', index: 'RecipientAddress2', key: false, label: 'Recipient Address 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientCity', index: 'RecipientCity', key: false, label: 'Recipient City', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientState', index: 'RecipientState', key: false, label: 'Recipient State', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'RecipientPostalCode', index: 'RecipientPostalCode', key: false, label: 'Recipient Postal Code', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'UnhandledComment', index: 'UnhandledComment', key: false, label: 'Unhandled Comment', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Overdue', index: 'Overdue', key: false, label: 'Overdue', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'InspectedDate', index: 'InspectedDate', key: false, label: 'Inspected Date', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'Borrower', index: 'Borrower', key: false, label: 'Borrower', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ServiceRepName', index: 'ServiceRepName', key: false, label: 'Service Rep Name', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AppointmentRequired', index: 'AppointmentRequired', key: false, label: 'Appointment Required', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AnalyticsProviderID', index: 'AnalyticsProviderID', key: false, label: 'Analytics Provider ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'ConfirmAppointment', index: 'ConfirmAppointment', key: false, label: 'Confirm Appointment', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LockboxCode', index: 'LockboxCode', key: false, label: 'Lockbox Code', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'AssignedDate', index: 'AssignedDate', key: false, label: 'Assigned Date', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptTime1', index: 'SuppliedApptTime1', key: false, label: 'Supplied Appt Time 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptTime2', index: 'SuppliedApptTime2', key: false, label: 'Supplied Appt Time 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptEndTime1', index: 'SuppliedApptEndTime1', key: false, label: 'Supplied Appt End Time 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'SuppliedApptEndTime2', index: 'SuppliedApptEndTime2', key: false, label: 'Supplied Appt End Time 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'O', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'AllowsConditionals', index: 'AllowsConditionals', key: false, label: 'Allows Conditionals', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'HideClientDetails', index: 'HideClientDetails', key: false, label: 'Hide Client Details', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'TimeSensitiveTaskType', index: 'TimeSensitiveTaskType', key: false, label: 'Time Sensitive Task Type', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorFee', index: 'VendorFee', key: false, label: 'Vendor Fee', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanPurposeID', index: 'LoanPurposeID', key: false, label: 'Loan Purpose ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanPurposeDescription', index: 'LoanPurposeDescription', key: false, label: 'Loan Purpose', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanTypeID', index: 'LoanTypeID', key: false, label: 'Loan Type ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanTypeDescription', index: 'LoanTypeDescription', key: false, label: 'Loan Type', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'FHACaseNumber', index: 'FHACaseNumber', key: false, label: 'Fhacase Number', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LoanNumber', index: 'LoanNumber', key: false, label: 'Loan Number', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OnHold', index: 'OnHold', key: false, label: 'On Hold', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'PreventVendorAccess', index: 'PreventVendorAccess', key: false, label: 'Prevent Vendor Access', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: formatPreventVendorAccess, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'EngagementDocumentID', index: 'EngagementDocumentID', key: false, label: 'Engagement Document ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorTechnologyFee', index: 'VendorTechnologyFee', key: false, label: 'Vendor Technology Fee', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' }],

	page: 1,

	pager: '#gridCorrections-pager',

	rowNum: -1,

	gridComplete: completeCorrectionsGridLoad,

	height: 'auto',

	autowidth: true,

	viewrecords: true,

	gridview: true,

	shrinkToFit: true,

	sortable: false,

	loadonce: false,

	loadui: 'enable',

	caption: '',

	altRows: false,

	search: 'false',

	hidegrid: false,

	resizeStop: function (width, index) {

			if ($('div#gview_gridCorrections .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridCorrections .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridCorrections .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridCorrections .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		$(window).on('resize', function() {

			if ($('div#gview_gridCorrections .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridCorrections .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridCorrections .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridCorrections .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		});

	},

	loadError: handleException,

	jsonReader: { root: 'rows', page: 'page', total: 'total', records: 'records', id: 'OrderKey', cells: '', repeatitems: false }

	});

	$('#gridCorrections').navGrid('#gridCorrections-pager',{refresh: true, del: false, add: false, view: false, search: false, edit: false},{},{},{},{},{});

});



$(document).ready(function() {

	var stf = $('#gridCorrections').getGridParam('shrinkToFit');

	if (stf == true)

		$('#gview_gridCorrections').find('.ui-jqgrid-bdiv').css('overflow-x', 'hidden');

	else

		$('#gview_gridCorrections').find('.ui-jqgrid-bdiv').css('overflow-x', 'auto');

});



</script>



	<table id="gridCorrections"><tr><td /></tr></table>





</div>





<script type="text/javascript">



    //Need the original column widths to decide if the jqGrid should "shrinkToFit" or not when resizing

    var colWidthsCorrections = {};

         colWidthsCorrections['OrderID'] = 100;

         colWidthsCorrections['OrderItemID'] = 100;

         colWidthsCorrections['ClientID'] = 100;

         colWidthsCorrections['Client'] = 100;

         colWidthsCorrections['Actions'] = 80;

         colWidthsCorrections['OrderKey'] = 90;

         colWidthsCorrections['ProductID'] = 100;

         colWidthsCorrections['Product'] = 100;

         colWidthsCorrections['VendorProduct'] = 90;

         colWidthsCorrections['AdjustedFee'] = 100;

         colWidthsCorrections['Reviewer'] = 200;

         colWidthsCorrections['SubjectPropertyAddress1'] = 100;

         colWidthsCorrections['SubjectPropertyAddress2'] = 100;

         colWidthsCorrections['SubjectPropertyAddress'] = 300;

         colWidthsCorrections['SubjectPropertyCity'] = 150;

         colWidthsCorrections['SubjectPropertyState'] = 90;

         colWidthsCorrections['SubjectPropertyPostalCode'] = 90;

         colWidthsCorrections['Latitude'] = 100;

         colWidthsCorrections['Longitude'] = 100;

         colWidthsCorrections['DueDate'] = 170;

         colWidthsCorrections['DueDateISO'] = 100;

         colWidthsCorrections['RushOrder'] = 100;

         colWidthsCorrections['RushOrderFlag'] = 100;

         colWidthsCorrections['IsMapAvailable'] = 100;

         colWidthsCorrections['Recipient'] = 200;

         colWidthsCorrections['RecipientAddress1'] = 100;

         colWidthsCorrections['RecipientAddress2'] = 100;

         colWidthsCorrections['RecipientCity'] = 100;

         colWidthsCorrections['RecipientState'] = 100;

         colWidthsCorrections['RecipientPostalCode'] = 100;

         colWidthsCorrections['UnhandledComment'] = 100;

         colWidthsCorrections['Overdue'] = 100;

         colWidthsCorrections['InspectedDate'] = 100;

         colWidthsCorrections['Borrower'] = 200;

         colWidthsCorrections['ServiceRepName'] = 100;

         colWidthsCorrections['AppointmentRequired'] = 100;

         colWidthsCorrections['AnalyticsProviderID'] = 100;

         colWidthsCorrections['ConfirmAppointment'] = 100;

         colWidthsCorrections['LockboxCode'] = 100;

         colWidthsCorrections['AssignedDate'] = 100;

         colWidthsCorrections['SuppliedApptTime1'] = 100;

         colWidthsCorrections['SuppliedApptTime2'] = 100;

         colWidthsCorrections['SuppliedApptEndTime1'] = 100;

         colWidthsCorrections['SuppliedApptEndTime2'] = 100;

         colWidthsCorrections['AllowsConditionals'] = 100;

         colWidthsCorrections['HideClientDetails'] = 100;

         colWidthsCorrections['TimeSensitiveTaskType'] = 100;

         colWidthsCorrections['VendorFee'] = 100;

         colWidthsCorrections['LoanPurposeID'] = 100;

         colWidthsCorrections['LoanPurposeDescription'] = 200;

         colWidthsCorrections['LoanTypeID'] = 100;

         colWidthsCorrections['LoanTypeDescription'] = 200;

         colWidthsCorrections['FHACaseNumber'] = 100;

         colWidthsCorrections['LoanNumber'] = 100;

         colWidthsCorrections['OnHold'] = 100;

         colWidthsCorrections['PreventVendorAccess'] = 100;

         colWidthsCorrections['EngagementDocumentID'] = 100;

         colWidthsCorrections['VendorTechnologyFee'] = 100;



    $(document).ready(function () {







        $('div#CorrectionsTabContent').on('parentResize.cvc', function () {



                var minGridPanelHeight = 250;

                var contentHeight = $(this).innerHeight();

                var verbiageHeight = $(this).children('.grid-header').outerHeight(true);



                var gridPanel = $(this).find('.grid-panel');

                var newGridPanelHeight = contentHeight - verbiageHeight;

                if (newGridPanelHeight < minGridPanelHeight) {

                    newGridPanelHeight = minGridPanelHeight;

                $(this).css('overflow-y', "scroll");

                }

                else

                $(this).css('overflow-y', "hidden");



            $(gridPanel).outerHeight(newGridPanelHeight, true);



                var $grid = $('#gridCorrections');

                var $gridBody = $('div#gview_gridCorrections .ui-jqgrid-bdiv');



                var gridHeaderHeight = $('div#gview_gridCorrections .ui-jqgrid-hdiv').outerHeight(true);

            $gridBody.height($(gridPanel).innerHeight() - (gridHeaderHeight + 2));



                gridParentWidth = $('#gbox_gridCorrections').parent().innerWidth();



                if (2160 < gridParentWidth) {

                //avoid a scrollbar for a few pixels

                $gridBody.css('overflow-x', 'hidden');

                $grid.setGridWidth(gridParentWidth, true);

                }

                else {

                $gridBody.css('overflow-x', 'auto');

                $grid.setGridWidth(gridParentWidth, true);

                    setGridColumnsToMinWidth('gridCorrections', colWidthsCorrections);

                $grid.jqGrid('setGridParam', { shrinkToFit: false });

                }

            });

        });





    

    function addCorrectionsComment(orderKey) {

        var row = $('#gridCorrections').getRowData(orderKey);



        $('#addCommentModal').data('bs.modal').show(populateOrderInfoFromRow(row));

    }

    



</script>





            </div>

            <div id="CompletedOrdersTabContent" class="clearfix tab-pane fade" style="margin-top: 15px; margin-bottom: 15px;">

                <div id="searchCriteria" class="container" style="margin-left: 15px">

    <div class="form-horizontal">

        <span style="font-size: 20px;color: gray;">Search Criteria</span>

        <div class="form-group">

            	<label class="control-label col-md-3" for="SearchCriteria_OrderKey">Order ID:</label>

	<div class="controls col-md-3">

		<input class="form-control" id="SearchCriteria_OrderKey" name="SearchCriteria.OrderKey" type="text" value="" />

	</div>



            	<label class="control-label col-md-3" for="SearchCriteria_SubmittedDateFrom">Submitted Date From:</label>

	<div class='controls col-md-3'>

	<div class='input-group date' id='SearchCriteria_SubmittedDateFrom_e8c904a7-8393-4b4e-9803-5d747a165229'>

		<input class="form-control" id="SearchCriteria_SubmittedDateFrom" name="SearchCriteria.SubmittedDateFrom" type="text" value="" />

		<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>		</span>	</div>

	</div>

	<script type='text/javascript'>

		$(document).ready(function() {

		$('#SearchCriteria_SubmittedDateFrom_e8c904a7-8393-4b4e-9803-5d747a165229').datetimepicker({ format: 'MM/DD/YYYY', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });

		$('#SearchCriteria_SubmittedDateFrom_e8c904a7-8393-4b4e-9803-5d747a165229').on('dp.change', function() {

			var inputElement = $('#SearchCriteria_SubmittedDateFrom')[0];

			if (inputElement.setCustomValidity)

				inputElement.setCustomValidity('');

		});

		$('#SearchCriteria_SubmittedDateFrom').on('keyup', function() {

			if (this.setCustomValidity)

				this.setCustomValidity('');

		});


	});

</script>



        </div>

        <div class="form-group">

            	<label class="control-label col-md-3" for="SearchCriteria_SubjectAddress">Subject Address:</label>

	<div class="controls col-md-3">

		<input class="form-control" id="SearchCriteria_SubjectAddress" name="SearchCriteria.SubjectAddress" type="text" value="" />

	</div>



            	<label class="control-label col-md-3" for="SearchCriteria_SubmittedDateTo">Submitted Date To:</label>

	<div class='controls col-md-3'>

	<div class='input-group date' id='SearchCriteria_SubmittedDateTo_91f4a1d3-e1de-48db-bf4b-4abbbb9c0dc6'>

		<input class="form-control" id="SearchCriteria_SubmittedDateTo" name="SearchCriteria.SubmittedDateTo" type="text" value="" />

		<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>		</span>	</div>

	</div>

	<script type='text/javascript'>

		$(document).ready(function() {

		$('#SearchCriteria_SubmittedDateTo_91f4a1d3-e1de-48db-bf4b-4abbbb9c0dc6').datetimepicker({ format: 'MM/DD/YYYY', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });

		$('#SearchCriteria_SubmittedDateTo_91f4a1d3-e1de-48db-bf4b-4abbbb9c0dc6').on('dp.change', function() {

			var inputElement = $('#SearchCriteria_SubmittedDateTo')[0];

			if (inputElement.setCustomValidity)

				inputElement.setCustomValidity('');

		});

		$('#SearchCriteria_SubmittedDateTo').on('keyup', function() {

			if (this.setCustomValidity)

				this.setCustomValidity('');

		});


	});

</script>



        </div>

        <div class="form-group">

                <div class="col-md-6"></div>

            <div class="col-md-3 col-md-offset-3">

                <div class="btn-group" role="group" style="width: 100%">

                    <button class="btn btn-success" style="width: 50%" onclick="searchCompletedOrders();">Search</button>

                    <button class="btn btn-default" style="width: 50%" onclick="clearCompletedOrdersSearch();">Clear</button>

                </div>

            </div>

        </div>

    </div>

</div>



<div class="grid-panel" style="margin: 0px 15px;">



    <script type="text/javascript">



        function formatReportLinks(cellvalue, options, rowobject) {

        	var links = '';

        	

            return links.trim();

        }



        function formatPaymentStatus(cellvalue) {

            if (cellvalue == 'Contact Us' & 'thoover@classvaluation.com' !== '') {

                return '<a href="mailto:thoover@classvaluation.com">Contact Us</a>';

            }



            return cellvalue;

        }



    </script>





<script type="text/javascript">

$(function () {

$('#gridCompletedOrders').jqGrid({

	url: '/Orders/CompletedOrders',

	datatype: 'local',

	loadComplete: function (data) { $('#gridCompletedOrders').jqGrid('setGridParam',{datatype:'json'}); },

	mtype: 'POST',

ajaxGridOptions: { contentType: "application/json" },

serializeGridData: function(postData) { return JSON.stringify(postData); },

	styleUI: 'Bootstrap',

	colModel: [		{ name: 'OrderID', index: 'OrderID', key: false, label: 'Order ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderItemID', index: 'OrderItemID', key: false, label: 'Order Item ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'OrderKey', index: 'OrderKey', key: true, label: 'Order No.', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress', index: 'SubjectPropertyAddress', key: false, label: 'Subject Property', align: 'left', hidden: false, sortable: true, editable: false, width: 300, formatter: formatSubjectPropertyAddress, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress1', index: 'SubjectPropertyAddress1', key: false, label: 'Subject Property Address 1', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyAddress2', index: 'SubjectPropertyAddress2', key: false, label: 'Subject Property Address 2', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyCity', index: 'SubjectPropertyCity', key: false, label: 'City', align: 'left', hidden: false, sortable: true, editable: false, width: 150, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyState', index: 'SubjectPropertyState', key: false, label: '<div style="text-align: center; width: 100%;">State</div>', align: 'center', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'SubjectPropertyPostalCode', index: 'SubjectPropertyPostalCode', key: false, label: 'Zip', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'VendorProduct', index: 'VendorProduct', key: false, label: 'Product', align: 'left', hidden: false, sortable: true, editable: false, width: 90, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'Borrower', index: 'Borrower', key: false, label: 'Borrower', align: 'left', hidden: false, sortable: true, editable: false, width: 200, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'CompletedDate', index: 'CompletedDate', key: false, label: 'Approved Date', align: 'left', hidden: false, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'd', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'AdjustedFee', index: 'AdjustedFee', key: false, label: '<div style="text-align: center; width: 100%;">Fee</div>', align: 'right', hidden: false, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' },

		{ name: 'PaymentStatus', index: 'PaymentStatus', key: false, label: 'Payment Status', align: 'left', hidden: true, sortable: true, editable: false, width: 90, formatter: formatPaymentStatus, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LastCheckAmount', index: 'LastCheckAmount', key: false, label: '<div style="text-align: center; width: 100%;">Check Amount</div>', align: 'right', hidden: true, sortable: true, editable: false, width: 100, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' },

		{ name: 'LastCheckNumber', index: 'LastCheckNumber', key: false, label: 'Check #', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },

		{ name: 'LastCheckDate', index: 'LastCheckDate', key: false, label: 'Check Sent Date', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'd', serverTimeZoneOffset: '0', serverSupportsDST: false, serverTimeZoneAbbreviation: '', momentZoneName: '', showServerTime: false }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },

		{ name: 'ReportDownload', index: 'ReportDownload', key: false, label: 'Report Download', align: 'left', hidden: false, sortable: false, editable: false, width: 120, formatter: formatReportLinks, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' }],

	page: 1,

	pager: '#gridCompletedOrders-pager',

	rowNum: 100,

	beforeRequest: beforeSearchCompletedOrders,

	gridComplete: completedOrdersGrid_Loaded,

	height: 'auto',

	autowidth: true,

	viewrecords: true,

	gridview: true,

	shrinkToFit: true,

	sortable: false,

	loadonce: false,

	loadui: 'enable',

	caption: '',

	altRows: false,

	search: 'false',

	hidegrid: false,

	resizeStop: function (width, index) {

			if ($('div#gview_gridCompletedOrders .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridCompletedOrders .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridCompletedOrders .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridCompletedOrders .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		$(window).on('resize', function() {

			if ($('div#gview_gridCompletedOrders .ui-jqgrid-bdiv').innerWidth() < $('div#gview_gridCompletedOrders .ui-jqgrid-btable').innerWidth())

				$('div#gview_gridCompletedOrders .ui-jqgrid-bdiv').css('overflow-x', 'scroll');

				else $('div#gview_gridCompletedOrders .ui-jqgrid-bdiv').css('overflow-x', 'hidden');

		});

	},

	loadError: handleException,

	jsonReader: { root: 'rows', page: 'page', total: 'total', records: 'records', id: 'OrderKey', cells: '', repeatitems: false }

	});

	$('#gridCompletedOrders').navGrid('#gridCompletedOrders-pager',{refresh: true, del: false, add: false, view: false, search: false, edit: false},{},{},{},{},{});

});



$(document).ready(function() {

	var stf = $('#gridCompletedOrders').getGridParam('shrinkToFit');

	if (stf == true)

		$('#gview_gridCompletedOrders').find('.ui-jqgrid-bdiv').css('overflow-x', 'hidden');

	else

		$('#gview_gridCompletedOrders').find('.ui-jqgrid-bdiv').css('overflow-x', 'auto');

});



</script>



	<table id="gridCompletedOrders"><tr><td /></tr></table>

	<div id="gridCompletedOrders-pager"></div>





</div>



<script type="text/javascript">







    var colWidthsCompletedOrders = {};

         colWidthsCompletedOrders['OrderID'] = 100;

         colWidthsCompletedOrders['OrderItemID'] = 100;

         colWidthsCompletedOrders['OrderKey'] = 90;

         colWidthsCompletedOrders['SubjectPropertyAddress'] = 300;

         colWidthsCompletedOrders['SubjectPropertyAddress1'] = 100;

         colWidthsCompletedOrders['SubjectPropertyAddress2'] = 100;

         colWidthsCompletedOrders['SubjectPropertyCity'] = 150;

         colWidthsCompletedOrders['SubjectPropertyState'] = 90;

         colWidthsCompletedOrders['SubjectPropertyPostalCode'] = 90;

         colWidthsCompletedOrders['VendorProduct'] = 90;

         colWidthsCompletedOrders['Borrower'] = 200;

         colWidthsCompletedOrders['CompletedDate'] = 100;

         colWidthsCompletedOrders['AdjustedFee'] = 100;

         colWidthsCompletedOrders['PaymentStatus'] = 90;

         colWidthsCompletedOrders['LastCheckAmount'] = 100;

         colWidthsCompletedOrders['LastCheckNumber'] = 100;

         colWidthsCompletedOrders['LastCheckDate'] = 100;

         colWidthsCompletedOrders['ReportDownload'] = 120;



    $(document).ready(function () {



        $('div#CompletedOrdersTabContent').on('parentResize.cvc', function () {



            var minGridPanelHeight = 250;

            var contentHeight = $(this).innerHeight();

            //var verbiageHeight = $(this).children('.grid-header').outerHeight(true);

            var criteria = $(this).children('#searchCriteria').outerHeight(true);



            var gridPanel = $(this).find('.grid-panel');

            var newGridPanelHeight = contentHeight - criteria;

            if (newGridPanelHeight < minGridPanelHeight) {

                newGridPanelHeight = minGridPanelHeight;

                $(this).css('overflow-y', "scroll");

            }

            else

                $(this).css('overflow-y', "hidden");



            $(gridPanel).outerHeight(newGridPanelHeight, true);



            var $grid = $('#gridCompletedOrders');

            var $gridBody = $('div#gview_gridCompletedOrders .ui-jqgrid-bdiv');



            var gridHeaderHeight = $('div#gview_gridCompletedOrders .ui-jqgrid-hdiv').outerHeight(true);

            var gridPagerHeight = $('div#gridCompletedOrders-pager').outerHeight(true);



            $gridBody.height($(gridPanel).innerHeight() - (gridHeaderHeight + gridPagerHeight + 2));



            gridParentWidth = $('#gbox_gridCompletedOrders').parent().innerWidth();



            if (1330 < gridParentWidth) {

                //avoid a scrollbar for a few pixels

                $gridBody.css('overflow-x', 'hidden');

                $grid.setGridWidth(gridParentWidth, true);

            }

            else {

                $gridBody.css('overflow-x', 'auto');

                $grid.setGridWidth(gridParentWidth, true);

                setGridColumnsToMinWidth('gridCompletedOrders', colWidthsCompletedOrders);

                $grid.jqGrid('setGridParam', { shrinkToFit: false });

            }

        });

    });



    function clearCompletedOrdersSearch() {

        $('#SearchCriteria_OrderKey').val('');

        $('#SearchCriteria_SubmittedDateFrom').val('');

        $('#SearchCriteria_SubjectAddress').val('');

        $('#SearchCriteria_SubmittedDateTo').val('');

        $('#SearchCriteria_HasBeenPaid').val('');

    }



    function searchCompletedOrders() {

        $("#gridCompletedOrders").setGridParam({ page: 1 });

        $("#gridCompletedOrders").trigger("reloadGrid");

    }



    function beforeSearchCompletedOrders() {



        $('#SearchCriteria_OrderKey').blur();

        $('#SearchCriteria_SubmittedDateFrom').blur();

        $('#SearchCriteria_SubjectAddress').blur();

        $('#SearchCriteria_SubmittedDateTo').blur();

        $('#SearchCriteria_HasBeenPaid').blur();



        var searchCriteria = {

            VendorID: 153346,

            OrderKey: $('#SearchCriteria_OrderKey').val(),

            SubmittedDateFrom: $('#SearchCriteria_SubmittedDateFrom').closest('div.date').data('DateTimePicker').date() == null ? "" : $('#SearchCriteria_SubmittedDateFrom').closest('div.date').data('DateTimePicker').date().format(),

            SubjectAddress: $('#SearchCriteria_SubjectAddress').val(),

            SubmittedDateTo: $('#SearchCriteria_SubmittedDateTo').closest('div.date').data('DateTimePicker').date() == null ? "" : $('#SearchCriteria_SubmittedDateTo').closest('div.date').data('DateTimePicker').date().format(),

            HasBeenPaid: $('#SearchCriteria_HasBeenPaid').val()

        };



        $('#gridCompletedOrders').setPostDataItem('criteria', searchCriteria);

    }



    function completedOrdersGrid_Loaded() {

        $("#gridCompletedOrders tr.jqgrow:odd").css("background-color", "#f9f9f9");

    }





</script>

            </div>

        </div>

    </div>



</div>







<div id="acceptOrderModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">

    <div class="modal-dialog modal-lg">

        <div class="modal-content">

            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                <span class="glyphicon glyphicon-ok-sign"></span>

                <span class="modal-title">Accept an Order</span>

                <p>

                    Details of this new order are provided below. By accepting this assignment, you

                    agree to provide the indicated product in accordance with your vendor contract and/or

                    the instructions provided below. This includes the date the final report is required

                    and the fee from your service profile.

                </p>

            </div>

            <div class="modal-body" style="padding-top: 0px; padding-bottom: 0px;">

                <form id="frmAcceptOrder" class="form-horizontal">

                    <input name="__RequestVerification1Token" type="hidden" value="xfMmHhpY1frTeASOPM-cXjGS9p4xNUiXvwQnMr7mL3xRbxKoiY-QX7dG55Ij0aBPoz1gsMcrCx3W1V2lqvijbsQEocs7Fi5kKUkZxyVYBdnmJED2NrocVJKgZLJQ_nQ8fdm_fQ2" />

                    

        <div class="order-summary">

                <div class="row">

                     	<label class="control-label col-md-2" for="SummaryOrderKey">Order ID:</label>

	<label class="col-md-2" for="SummaryOrderKey" id="SummaryOrderKey" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                     	<label class="control-label col-md-2" for="SummarySubjectAddress">Subject Address:</label>

	<label class="col-md-4" for="SummarySubjectAddress" id="SummarySubjectAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row client-details">

                    	<label class="control-label col-md-2" for="SummaryRecipient">Client:</label>

	<label class="col-md-2" for="SummaryRecipient" id="SummaryRecipient" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryRecipientAddress">Client Address:</label>

	<label class="col-md-4" for="SummaryRecipientAddress" id="SummaryRecipientAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFee">Fee:</label>

	<label class="col-md-2" for="SummaryFee" id="SummaryFee" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryLoanPurpose">Loan Purpose:</label>

	<label class="col-md-2" for="SummaryLoanPurpose" id="SummaryLoanPurpose" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryProduct">Product:</label>

	<label class="col-md-2" for="SummaryProduct" id="SummaryProduct" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryAssignedDate">Assigned On:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryAssignedDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryAssignedDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryInspectionDate">Inspection Date:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryInspectionDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryInspectionDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryDueDate">Due By:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryDueDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryDueDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFHACaseNumber">FHA Case Number:</label>

	<label class="col-md-2" for="SummaryFHACaseNumber" id="SummaryFHACaseNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    <section class="client-details">

                        	<label class="control-label col-md-2" for="SummaryLoanNumber">Loan Number:</label>

	<label class="col-md-2" for="SummaryLoanNumber" id="SummaryLoanNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </section>

                </div>

                <section class="lockbox">

                    <div class="row">

                        	<label class="control-label col-md-2" for="SummaryLockBoxCode">Lockbox Code:</label>

	<label class="col-md-2" for="SummaryLockBoxCode" id="SummaryLockBoxCode" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </div>

                </section>

        </div>

                   





					<div id="vendorTechnologyFeeAlert" class="alert alert-danger" style="display: none;">

						Please note that there is a <span id="vendorTechnologyFee">$X.XX</span> technology fee associated with this order.

						You will be required to maintain a credit card on file, which will be automatically charged at the time you complete the assignment.

					</div>



                    <div id="onHoldAlert" class="alert alert-warning" style="display: none;">

                        <strong>Order On Hold: </strong> This item is currently on hold; contact your client for more information before proceeding.

                    </div>



                    <div id="rushOrderNote" class="alert alert-danger" style="display: none;">

                        Please take note of the <strong>due date</strong>. This is a rush order.

                    </div>



                    <input id="OrderID" name="OrderID" type="hidden" value="0" />

                    <input id="OrderItemID" name="OrderItemID" type="hidden" value="0" />

                    <input id="VendorID" name="VendorID" type="hidden" value="0" />

                    <input id="AllowConditionalAcceptance" name="AllowConditionalAcceptance" type="hidden" value="False" />

                    <input id="VendorDueDate" name="VendorDueDate" type="hidden" value="" />

                    <input id="VendorAdjustedFee" name="VendorAdjustedFee" type="hidden" value="" />



                    <div id="conditionalAcceptanceContainer" style="display: none;">

                        <div class="form-group">

                            <div class="col-md-10" style="padding-left: 30px;">

                                <input id="IsConditionalAcceptance" name="IsConditionalAcceptance" type="checkbox" value="true" /><input name="IsConditionalAcceptance" type="hidden" value="false" /><span class="checkbox-label"> I would like to conditionally accept the order.</span>

                            </div>

                        </div>

                        <div class="form-group" id="validationGroup" style="display: none;">

                            <div class="col-md-offset-1 col-md-9" style="color: red;">

                                <div class="validation-summary-errors">

                                    <ul></ul>

                                </div>

                            </div>

                        </div>

                        <div class="form-group" id="conditionalAcceptFields" style="display: none;">

                            	<label class="control-label col-md-1" for="RequestDate">Due:</label>

	<div class='controls col-md-3'>

	<div class='input-group date' id='RequestDate_3df304f4-6117-41be-bcc7-12fc2211b86e'>

		<input class="form-control" id="RequestDate" name="RequestDate" type="text" value="" />

		<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>		</span>	</div>

	</div>

	<script type='text/javascript'>

		$(document).ready(function() {

		$('#RequestDate_3df304f4-6117-41be-bcc7-12fc2211b86e').datetimepicker({ format: 'MM/DD/YYYY', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });

		$('#RequestDate_3df304f4-6117-41be-bcc7-12fc2211b86e').on('dp.change', function() {

			var inputElement = $('#RequestDate')[0];

			if (inputElement.setCustomValidity)

				inputElement.setCustomValidity('');

		});

		$('#RequestDate').on('keyup', function() {

			if (this.setCustomValidity)

				this.setCustomValidity('');

		});


	});

</script>



                            	<label class="control-label col-md-1" for="RequestFee">Fee:</label>

	<div class="controls col-md-2">

		<input class="form-control" id="RequestFee" name="RequestFee" type="text" value="" />

	</div>



                            	<label class="control-label col-md-1" for="Comment">Comment:</label>

	<div class="controls col-md-4">

		<input class="form-control" id="Comment" name="Comment" type="text" value="" />

	</div>



                        </div>

                    </div>



                        <div class="alert alert-warning">

                            An order is NOT accepted until you click the ACCEPT button below. <span id="ConditionalAcceptanceNote" class="hide"><strong>If you are negotiating, do not start work until it has been accepted and shows up in the <i>Orders In Progress</i> tab.</strong></span>

                        </div>

                </form>



            </div>

            <div class="modal-footer">

                <div id="engagementLetterContainer">

                    <a id="btnEngagementDocument" target="_blank" class="btn btn-warning" href="#">

                        <span style="color: black;" class="glyphicon glyphicon-envelope"></span>

                        Engagement Letter

                    </a>

                </div>

                <button id="btnAcceptOrderSubmit" class="btn btn-inverse modal-enter-button enter-button" OnClick="$('#acceptOrderModal').data('bs.modal').save();">Accept Order</button>

                <button class="btn btn-default" data-dismiss="modal">Cancel</button>

            </div>

        </div>

    </div>

</div>



<script type="text/javascript">



    $(document).ready(function () {



        $('#acceptOrderModal').clearvalueacceptordermodal();



    });



    // ClearAcceptOrderModal : ClearValueModal

	(function ($) {

		'use strict';



		var _orderInfo = null;

		var _parent = $.fn.clearvaluemodal;



		var _originalRequestDate = null;

		var _originalRequestFee = null;



		var ClearValueAcceptOrderModal = function (element, options) {

			_parent.Constructor.apply(this, arguments);



			this.$element.find('#RequestFee').numericInput({ allowFloat: true });

			this.$element.find('#RequestFee').blur(function () { $(this).val(accounting.formatMoney($(this).val(), "", 2, ",", ".", "%s%v")); }).blur();





			this.$element.find("#IsConditionalAcceptance").click(function (e) {

				toggleConditionalAcceptFields();

			});



			this.$element.on('show.bs.modal', function () {



				$(this).find(".validation-summary-errors ul li").remove();

				$(this).find("#validationGroup").hide();



				$(this).find(".modal-title").text('Accept an Order - ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID);



                $(this).find("#OrderID").val(_orderInfo.OrderID);

                $(this).find("#OrderItemID").val(_orderInfo.OrderItemID);

                $(this).find("#AllowConditionalAcceptance").val(_orderInfo.AllowConditionalAcceptance);

                $(this).find("#VendorDueDate").val(_orderInfo.VendorDueDate);

                $(this).find("#VendorAdjustedFee").val(_orderInfo.AdjustedVendorFee);

                $(this).find("#VendorID").val(153346);

                _originalRequestDate = _orderInfo.VendorDueDate;

                _originalRequestFee = _orderInfo.AdjustedVendorFee;

                $(this).find("#Comment").val('');



				$(this).find("#RequestDate").blur();

				$(this).find("#RequestFee").blur();

				$(this).find("#Comment").blur();



				showOrderSummary($(this), _orderInfo);



				$('#IsConditionalAcceptance').prop('checked', false);

				toggleConditionalAcceptFields();





				if (_orderInfo.OnHold) $('#onHoldAlert').show();

				else $('#onHoldAlert').hide();



				if (_orderInfo.RushOrder) $('#rushOrderNote').show();

				else $('#rushOrderNote').hide();



				$('#vendorTechnologyFeeAlert #vendorTechnologyFee').text('$' + _orderInfo.VendorTechnologyFee);

				if (_orderInfo.VendorTechnologyFee > 0) $('#vendorTechnologyFeeAlert').show();

				else $('#vendorTechnologyFeeAlert').hide();



                if (_orderInfo.EngagementDocumentID !== '') {

                    $('#btnEngagementDocument').attr('href', '/Orders/' + _orderInfo.OrderID + '/Items/' + _orderInfo.OrderItemID + '/Documents/' + _orderInfo.EngagementDocumentID);

                    $('#engagementLetterContainer').css('display', 'inline-block');

                }

                else {

                    $('#btnEngagementDocument').attr('href', '#');

                    $('#engagementLetterContainer').css('display', 'none');

                }



				if (_orderInfo.AllowConditionalAcceptance) $('#conditionalAcceptanceContainer').show();

				else $('#conditionalAcceptanceContainer').hide();



			}).on('shown.bs.modal', function () {

			});

		}





		function toggleSubmit() {

			if ($('#checkAcceptOrderTnC').is(':checked')) {

				$("#btnAcceptOrderSubmit").prop('disabled', false);

			} else {

				$("#btnAcceptOrderSubmit").prop('disabled', true);

			}

		}



		function toggleConditionalAcceptFields() {

			if ($("#IsConditionalAcceptance").is(':checked')) {

				$("#conditionalAcceptFields").find('input').val('');

				$("#RequestDate").closest('div.date').data('DateTimePicker').date(_originalRequestDate);

				$("#RequestFee").val(_originalRequestFee);

				$("#conditionalAcceptFields").find('input').blur();

				$("#conditionalAcceptFields").find('input').prop('required', true);

				$("#conditionalAcceptFields").show();

			}

			else {

				$("#conditionalAcceptFields").hide();

				$("#conditionalAcceptFields").find('input').val('');

				$("#conditionalAcceptFields").find('input').blur();

				$("#conditionalAcceptFields").find('input').prop('required', false);

			}

		}



		ClearValueAcceptOrderModal.DEFAULTS = $.extend({}, _parent.Constructor.DEFAULTS);



		ClearValueAcceptOrderModal.prototype = $.extend({}, _parent.Constructor.prototype);



		ClearValueAcceptOrderModal.prototype.clearvaluemodalparent = function () {

			var args = $.makeArray(arguments),

                method = args.shift();

			_parent.Constructor.prototype[method].apply(this, args)

		};



		ClearValueAcceptOrderModal.prototype.show = function (orderInfo) {

			if (orderInfo) _orderInfo = orderInfo;

			else _orderInfo = new OrderInfo();

			this.clearvaluemodalparent('show');

		};



		ClearValueAcceptOrderModal.prototype.save = function () {



			var acceptModal = this;

			var $acceptModalElement = this.$element;



			$acceptModalElement.find("#RefreshFee").blur();

			$acceptModalElement.find("#RefreshDate").blur();

			$acceptModalElement.find("#Comment").blur();



			var isValid = $('#frmAcceptOrder')[0].checkValidity();



			if (isValid) {



				$acceptModalElement.find('button').prop('disabled', true);

				$acceptModalElement.find(".validation-summary-errors ul li").remove();

				$acceptModalElement.find("#validationGroup").hide();



                var url = '/Orders/' + $acceptModalElement.find('#OrderID').val() + '/Items/' + $acceptModalElement.find('#OrderItemID').val() + '/Accept';

                var data = $('#frmAcceptOrder').serializeArray();

                for (var i = 0; i < data.length; i++)

                    if (data[i].name == 'RequestDate')

                        data[i].value = $('#RequestDate').closest('div.date').data('DateTimePicker').date() == null ? "" : $('#RequestDate').closest('div.date').data('DateTimePicker').date().format();



				spinnerOn();

				$.ajax({

					url: url,

					type: 'POST',

					cache: false,

					data: $('#frmAcceptOrder').serialize(),

					contentType: "application/x-www-form-urlencoded",

					dataType: 'json'

				})

                    .done(function (result) {

                    	if (result.Success == undefined)

                    		displayValidationErrors(result);

                    	else {

                    		if (result.Success) {

                    			acceptModal.hide();

                    			showResultModal('Accept Order', result.Message, [result]);

                    			$acceptModalElement.trigger('done.cvc.bs.modal', result);

                    		}

                    		else

                    			showResultModal('Accept Order', '', [result]);

                    	}

                    })

                    .fail(function (jqXHR, textStatus, errorThrown) {

                    	spinnerOff();

                    	handleException(jqXHR, textStatus, errorThrown);

                    })

                    .always(function () {

                        $acceptModalElement.find('button').prop('disabled', false);

                        $acceptModalElement.find('#checkAcceptOrderTnC').attr('checked', false);

                    	spinnerOff();

                    });

			}

			else

				$("#frmAcceptOrder")[0].reportValidity();

		}



		function displayValidationErrors(result) {

			$('#frmAcceptOrder').find("#validationGroup").show();

			var $list = $('#frmAcceptOrder').find('div.validation-summary-errors ul');

			$list.find('li').remove();

			for (var i = 0; i < result.length; i++)

				$list.append('<li>' + result[i].ErrorMessage + '</li>');

			window.scrollTo(0, document.body.scrollHeight);

		}



		var old = $.fn.clearvalueacceptordermodal;



		$.fn.clearvalueacceptordermodal = function (option, _relatedTarget) {

			return this.each(function () {

				var $this = $(this),

                    data = $this.data('bs.modal'),

                    options = $.extend({}, ClearValueAcceptOrderModal.DEFAULTS, $this.data(), typeof option === 'object' && option);



				if (!data) {

					$this.data('bs.modal', (data = new ClearValueAcceptOrderModal(this, options)));

				}

				if (typeof option === 'string') {

					data[option](_relatedTarget);

				} else if (options.show) {

					data.show(_relatedTarget);

				}

			});

		};



		$.fn.clearvalueacceptordermodal.Constructor = ClearValueAcceptOrderModal;



		$.fn.clearvalueacceptordermodal.noConflict = function () {

			$.fn.clearvalueacceptordermodal = old;

			return this;

		};



	})(jQuery);



</script>



<div id="declineOrderModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">

    <div class="modal-dialog modal-lg">

        <div class="modal-content">

            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                <span class="glyphicon glyphicon-minus-sign" style="color: red;"></span>

                <span class="modal-title">Decline an Order</span>

                <p>

                    You may opt to decline this assignment. You are encouraged to do so if you feel

                    circumstances prevent you from meeting its terms and conditions. However, at the

                    sender's discretion, frequent assignment declination may adversely impact your selection

                    for future work.

                </p>

            </div>

            <div class="modal-body" style="padding-top: 0px; padding-bottom: 0px;">

                <form id="frmDeclineOrder" class="form-horizontal">

                    <input name="__RequestVerification1Token" type="hidden" value="wlbFHbq-0bujYP4b2pq0dM3nUotYF7srBT_Wgqgd0gtk7ny-l5002wgJJIuVxt3Y-z0LCy5wJKGZg6cNeQj06jRosyhJE06K7qykprAxwJcpvEqkDi22JplJ1GZsnNO5d1Sbgg2" />

                    

        <div class="order-summary">

                <div class="row">

                     	<label class="control-label col-md-2" for="SummaryOrderKey">Order ID:</label>

	<label class="col-md-2" for="SummaryOrderKey" id="SummaryOrderKey" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                     	<label class="control-label col-md-2" for="SummarySubjectAddress">Subject Address:</label>

	<label class="col-md-4" for="SummarySubjectAddress" id="SummarySubjectAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row client-details">

                    	<label class="control-label col-md-2" for="SummaryRecipient">Client:</label>

	<label class="col-md-2" for="SummaryRecipient" id="SummaryRecipient" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryRecipientAddress">Client Address:</label>

	<label class="col-md-4" for="SummaryRecipientAddress" id="SummaryRecipientAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFee">Fee:</label>

	<label class="col-md-2" for="SummaryFee" id="SummaryFee" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryLoanPurpose">Loan Purpose:</label>

	<label class="col-md-2" for="SummaryLoanPurpose" id="SummaryLoanPurpose" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryProduct">Product:</label>

	<label class="col-md-2" for="SummaryProduct" id="SummaryProduct" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryAssignedDate">Assigned On:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryAssignedDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryAssignedDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryInspectionDate">Inspection Date:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryInspectionDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryInspectionDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryDueDate">Due By:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryDueDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryDueDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFHACaseNumber">FHA Case Number:</label>

	<label class="col-md-2" for="SummaryFHACaseNumber" id="SummaryFHACaseNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    <section class="client-details">

                        	<label class="control-label col-md-2" for="SummaryLoanNumber">Loan Number:</label>

	<label class="col-md-2" for="SummaryLoanNumber" id="SummaryLoanNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </section>

                </div>

                <section class="lockbox">

                    <div class="row">

                        	<label class="control-label col-md-2" for="SummaryLockBoxCode">Lockbox Code:</label>

	<label class="col-md-2" for="SummaryLockBoxCode" id="SummaryLockBoxCode" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </div>

                </section>

        </div>

                   





                    <input id="DeclineOrder_OrderID" name="DeclineOrder.OrderID" type="hidden" value="0" />

                    <input id="DeclineOrder_OrderItemID" name="DeclineOrder.OrderItemID" type="hidden" value="0" />

                    <input id="DeclineOrder_VendorID" name="DeclineOrder.VendorID" type="hidden" value="0" />

                    <div class="form-group" id="validationGroup" style="display: none;">

                        <div class="col-md-offset-3 col-md-9" style="color: red;">

                            <div class="validation-summary-errors">

                                <ul></ul>

                            </div>

                        </div>

                    </div>

                    <div class="form-group">

	<label class="control-label col-md-3" for="DeclineOrder_DeclineReason">Reason:</label>

	<div class="controls col-md-6">

		<select class="form-control" id="DeclineOrder_DeclineReason" name="DeclineOrder.DeclineReason" onchange="if (this.setCustomValidity) this.setCustomValidity(&#39;&#39;);" oninput="if (this.setCustomValidity) this.setCustomValidity(&#39;&#39;);" oninvalid="if (this.setCustomValidity) {    if (this.validity.valueMissing) {        this.setCustomValidity(&#39;You must select a Decline Reason.&#39;);		    return;    }}" required="required"><option value="">(select a decline reason)</option>

<option value="AREA-UNSAFE">Subject Property is in Unsafe or Inaccessible Area</option>

<option value="ASSIGNMENT-TOO-DIFFICULT">Assignment is Too Difficult</option>

<option value="CONDITIONAL-ACCEPTANCE-DECLINED">Conditional Acceptance Declined</option>

<option value="DUE-DATE-NOT-ACCEPTABLE">Due Date Not Acceptable</option>

<option value="FEE-NOT-ACCEPTABLE">Fee Not Acceptable</option>

<option value="OTHER">Other</option>

<option value="REQUESTED-PRODUCT-INCORRECT">Requested Product Doesn&#39;t Match Property</option>

<option value="REQUESTED-PRODUCT-NOT-OFFERED">Requested Product Not Offered</option>

<option value="SUBJECT-PROPERTY-LIES-OUTSIDE-SERVICE-AREA">Subject Property Lies Outside Service Area</option>

<option value="TOO-BUSY-TO-ACCOMMODATE-THIS-ASSIGNMENT">Too Busy to Accommodate this Assignment</option>

<option value="UNAVAILABLE-FOR-WORK-AT-THIS-TIME">Unavailable for Work at this Time</option>

<option value="VENDOR-NOT-QUALIFIED">Not Qualified for this Assignment</option>

</select>

	</div>

</div>



                    <div class="form-group">

	<label class="control-label col-md-3" for="DeclineOrder_Comment">Description:</label>

	<div class="controls col-md-6">

		<textarea class="form-control" cols="20" id="DeclineOrder_Comment" name="DeclineOrder.Comment" onchange="if (this.setCustomValidity) this.setCustomValidity(&#39;&#39;);" oninput="if (this.setCustomValidity) this.setCustomValidity(&#39;&#39;);" oninvalid="if (this.setCustomValidity) {    if (this.validity.valueMissing) {        this.setCustomValidity(&#39;Comment is required.&#39;);		    return;    }}" required="required" rows="4" style="resize: none;">

</textarea>

	</div>

</div>



                </form>

        </div>

            <div class="modal-footer">

                <button id="btnDeclineOrderSubmit" class="btn btn-inverse modal-enter-button enter-button" OnClick="$('#declineOrderModal').data('bs.modal').save();">Decline Order</button>

                <button class="btn btn-default" data-dismiss="modal">Cancel</button>

            </div>

        </div>

    </div>

</div>



<script type="text/javascript">



    $(document).ready(function () {



        $('#declineOrderModal').clearvaluedeclineordermodal();



    });



    // ClearDeclineOrderModal : ClearValueModal

    (function ($) {

        'use strict';



        var _orderInfo = null;



        var _parent = $.fn.clearvaluemodal;



        var ClearValueDeclineOrderModal = function (element, options) {

            _parent.Constructor.apply(this, arguments);



        this.$element.on('show.bs.modal', function () {



                $(this).find(".validation-summary-errors ul li").remove();

                $(this).find("#validationGroup").hide();



                $(this).find(".modal-title").text('Decline an Order - ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID);



                $(this).find("#DeclineOrder_OrderID").val(_orderInfo.OrderID);

                $(this).find("#DeclineOrder_OrderItemID").val(_orderInfo.OrderItemID);

                $(this).find("#DeclineOrder_VendorID").val(153346);

                $(this).find("#DeclineOrder_DeclineReason").val('');

                $(this).find("#DeclineOrder_Comment").val('');



                showOrderSummary($(this), _orderInfo);



            }).on('shown.bs.modal', function () {

            });

		};



		ClearValueDeclineOrderModal.DEFAULTS = $.extend({}, _parent.Constructor.DEFAULTS);



        ClearValueDeclineOrderModal.prototype = $.extend({}, _parent.Constructor.prototype);



        ClearValueDeclineOrderModal.prototype.clearvaluemodalparent = function () {

            var args = $.makeArray(arguments),

                method = args.shift();

            _parent.Constructor.prototype[method].apply(this, args)

        };



        ClearValueDeclineOrderModal.prototype.show = function (orderInfo) {

            if (orderInfo) _orderInfo = orderInfo;

            else _orderInfo = new OrderInfo();

            this.clearvaluemodalparent('show');

        };



        ClearValueDeclineOrderModal.prototype.save = function () {



            var declineModal = this;

            var $declineModalElement = this.$element;



            $declineModalElement.find("#DeclineOrder_Comment").blur();



            var isValid = $('#frmDeclineOrder')[0].checkValidity();



            if (isValid) {



                $declineModalElement.find('button').prop('disabled', true);

                $declineModalElement.find(".validation-summary-errors ul li").remove();

                $declineModalElement.find("#validationGroup").hide();



                var url = '/Orders/' + $declineModalElement.find('#DeclineOrder_OrderID').val() + '/Items/' + $declineModalElement.find('#DeclineOrder_OrderItemID').val() + '/Decline';



                spinnerOn();

                $.ajax({

                    url: url,

                    type: 'POST',

                    cache: false,

                    data: $('#frmDeclineOrder').serialize(),

                    contentType: "application/x-www-form-urlencoded",

                    dataType: 'json'

                })

                    .done(function (result) {

                        if (result.Success == undefined) 

                            displayValidationErrors(result);

                        else {

                            if (result.Success) {

                                declineModal.hide();

                                showResultModal('Decline Order', result.Message, [result]);

                                $declineModalElement.trigger('done.cvc.bs.modal', result);

                            }

                            else

                                showResultModal('Decline Order', '', [result]);

                        }

                    })

                    .fail(function (jqXHR, textStatus, errorThrown) {

                        spinnerOff();

                        handleException(jqXHR, textStatus, errorThrown);

                    })

                    .always(function () {

                        $declineModalElement.find('button').prop('disabled', false);

                        spinnerOff();

                    });

            }

            else

                $("#frmDeclineOrder")[0].reportValidity();

        }



        function displayValidationErrors(result) {

            $('#frmDeclineOrder').find("#validationGroup").show();

            var $list = $('#frmDeclineOrder').find('div.validation-summary-errors ul');

            $list.find('li').remove();

            for (var i = 0; i < result.length; i++)

                $list.append('<li>' + result[i].ErrorMessage + '</li>');

            window.scrollTo(0, document.body.scrollHeight);

        }



        var old = $.fn.clearvaluedeclineordermodal;



        $.fn.clearvaluedeclineordermodal = function (option, _relatedTarget) {

            return this.each(function () {

                var $this = $(this),

                    data = $this.data('bs.modal'),

                    options = $.extend({}, ClearValueDeclineOrderModal.DEFAULTS, $this.data(), typeof option === 'object' && option);



                if (!data) {

                    $this.data('bs.modal', (data = new ClearValueDeclineOrderModal(this, options)));

                }

                if (typeof option === 'string') {

                    data[option](_relatedTarget);

                } else if (options.show) {

                    data.show(_relatedTarget);

                }

            });

        };



        $.fn.clearvaluedeclineordermodal.Constructor = ClearValueDeclineOrderModal;



        $.fn.clearvaluedeclineordermodal.noConflict = function () {

            $.fn.clearvaluedeclineordermodal = old;

            return this;

        };



    })(jQuery);



</script>





<div id="resultModal" class="modal order-grid-modal" tabindex="-1" role="dialog" aria-labelledby="Results" aria-hidden="true">

    <div class="modal-dialog modal-lg">

        <div class="modal-content">

            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                <span id="resultTitle">Order Item{s}</span>

            </div>

            <div class="modal-body" style="font-size: larger; max-height: 300px; overflow-x: auto; ">

                <div id="successTextRow" class="row">

                    <div class="col-md-offset-1 col-md-11">

                        <span class="glyphicon glyphicon-ok-sign" style="color: green; margin-right: 10px;"></span>

                        <span id="successText">

                        </span>

                    </div>

                </div>

                <div class="row" style="margin-top: 10px;">

                    <div class="col-md-offset-1 col-md-11">

                        <ul id="failList" style="list-style: none;"></ul>

                    </div>

                </div>

            </div>

            <div class="modal-footer">

                <button class="btn btn-default modal-enter-button enter-button" data-dismiss="modal">OK</button>

            </div>

        </div>

    </div>

</div>





<script type="text/javascript">



    function showResultModal(title, successText, results) {

        var successTotal = 0;

        for (var i = 0; i < results.length; i++) {

            if (results[i].Success) successTotal++;

        }



        $("#resultModal #resultTitle").text(title);

        if (scrub(successText) == '')

            $('#resultModal #successTextRow').hide();

        else {

            $('#resultModal #successTextRow').show();

            $("#resultModal #successText").text(successText.replaceAll('[total]', successTotal));

        }

        $('#resultModal #failList li').remove();

        for (var i = 0; i < results.length; i++) {

            if (!results[i].Success) {

                $('#resultModal #failList').append('<li><table class="layout"><tr><td><span class="glyphicon glyphicon-remove-sign" style="color: red; margin-right: 10px;"></span></td><td><span>' + scrub(results[i].Message) + '</span></td></tr></table></li>');

            }

        }

        $('#resultModal').clearvaluemodal('show');

    }



</script>



<div id="displayMapModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">

    <div class="modal-dialog modal-lg">

        <div class="modal-content">

            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                <span class="glyphicon glyphicon-road" style="color: black;"></span>

                <span class="modal-title">Order</span>

            </div>

            <div class="modal-body" style="padding: 0px; height: 300px;">



                <div id="MapDiv" class="bingMap"></div>



            </div>

            <div class="modal-footer">

                <button class="btn btn-default enter-button modal-enter-button" data-dismiss="modal">Close</button>

            </div>

        </div>

    </div>

</div>



<script type="text/javascript">





    $(document).ready(function () {



        $('#displayMapModal').clearvaluedisplaymapmodal();



    });



    // ClearDisplayMapModal : ClearValueModal

    (function ($) {

        'use strict';



        var _orderID = 0;

        var _orderItemID = 0;

        var _pinInfobox = null;

        var map = null;



        var _parent = $.fn.clearvaluemodal;



        var ClearValueDisplayMapModal = function (element, options) {

            _parent.Constructor.apply(this, arguments);



            this.$element.on('show.bs.modal', function () {

                var $title = $(this).find(".modal-title");

                $title.text('Order - ' + _orderID + '.' + _orderItemID);



                spinnerOn();

                $.ajax({

                    url: "/Orders/" + _orderID + "/Map?zoom=15&mapType=road",

                    type: 'POST',

                    cache: false,

                    async: false

                })

                .done(function (data) {

                    $title.text('Order - ' + _orderID + '.' + _orderItemID + ' - ' + data.Description);

                    GetMap(data);

                })

                .fail(function (jqXHR, textStatus, errorThrown) {

                    spinnerOff();

                    handleException(jqXHR, textStatus, errorThrown);

                })

                .always(function () {

                    spinnerOff();

                });



            }).on('shown.bs.modal', function () {

            });

        };



        function GetMap(data) {

            map = new Microsoft.Maps.Map(document.getElementById("MapDiv"),

                               {

                                   credentials: data.Credentials,

                                   center: new Microsoft.Maps.Location(data.Latitude, data.Longitude),

                                   mapTypeId: (new Function('return ' + data.MapType))(),

                                   zoom: data.Zoom

                               });



            // Define the pushpin location

            var loc = new Microsoft.Maps.Location(data.Latitude, data.Longitude);





            // Add a pin to the center of the map

            var pin = new Microsoft.Maps.Pushpin(loc, { text: '1' });





            // Create the infobox for the pushpin

            _pinInfobox = new Microsoft.Maps.Infobox(pin.getLocation(),

                    {

                        title: data.Title,

                        description: data.Description,

                        visible: false,

                        height: 105,

                        width: 220,

                        offset: new Microsoft.Maps.Point(0, 15)

                    });



            // Add handler for the pushpin click event.

            Microsoft.Maps.Events.addHandler(pin, 'click', displayInfobox);



            // Hide the infobox when the map is moved.

            Microsoft.Maps.Events.addHandler(map, 'viewchange', hideInfobox);



            map.entities.push(pin);

            map.entities.push(_pinInfobox);



        }



        function displayInfobox(e) {

            _pinInfobox.setOptions({ visible: true });

        }



        function hideInfobox(e) {

            _pinInfobox.setOptions({ visible: false });

		}



		ClearValueDisplayMapModal.DEFAULTS = $.extend({}, _parent.Constructor.DEFAULTS);



        ClearValueDisplayMapModal.prototype = $.extend({}, _parent.Constructor.prototype);



        ClearValueDisplayMapModal.prototype.clearvaluemodalparent = function () {

            var args = $.makeArray(arguments),

                method = args.shift();

            _parent.Constructor.prototype[method].apply(this, args)

        };



        ClearValueDisplayMapModal.prototype.show = function (orderID, orderItemID) {



            if (orderID) _orderID = orderID;

            else _orderID = 0;



            if (orderItemID) _orderItemID = orderItemID;

            else _orderItemID = 0;



            this.clearvaluemodalparent('show');

        };



        var old = $.fn.clearvaluedisplaymapmodal;



        $.fn.clearvaluedisplaymapmodal = function (option, _relatedTarget) {

            return this.each(function () {

                var $this = $(this),

                    data = $this.data('bs.modal'),

                    options = $.extend({}, ClearValueDisplayMapModal.DEFAULTS, $this.data(), typeof option === 'object' && option);



                if (!data) {

                    $this.data('bs.modal', (data = new ClearValueDisplayMapModal(this, options)));

                }

                if (typeof option === 'string') {

                    data[option](_relatedTarget);

                } else if (options.show) {

                    data.show(_relatedTarget);

                }

            });

        };



        $.fn.clearvaluedisplaymapmodal.Constructor = ClearValueDisplayMapModal;



        $.fn.clearvaluedisplaymapmodal.noConflict = function () {

            $.fn.clearvaluedisplaymapmodal = old;

            return this;

        };



    })(jQuery);



</script>



<div id="addCommentModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">

	<div class="modal-dialog modal-lg">

		<div class="modal-content">

			<div class="modal-header">

				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

				<span class="glyphicon glyphicon-minus-sign" style="color: red;"></span>

				<span class="modal-title">Add a Comment</span>

			</div>

			<div class="modal-body" style="padding-top: 0px; padding-bottom: 0px;">

				<form id="frmAddComment" class="form-horizontal">

                    <input name="__RequestVerificationToken" type="hidden" value="rEQCFVfcy3PCXrWscpNfgAzpT5qG88umQfvdsQLod1cJOTazC1-HnVZLiIUIiuLj83eNJiyNKRuDDE5HmPmyidJ7SrMqMBHuYqcsa0OPGrQ4jne6g2PP7ZVGjOMMsrr5615iKg2" />

					

        <div class="order-summary">

                <div class="row">

                     	<label class="control-label col-md-2" for="SummaryOrderKey">Order ID:</label>

	<label class="col-md-2" for="SummaryOrderKey" id="SummaryOrderKey" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                     	<label class="control-label col-md-2" for="SummarySubjectAddress">Subject Address:</label>

	<label class="col-md-4" for="SummarySubjectAddress" id="SummarySubjectAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row client-details">

                    	<label class="control-label col-md-2" for="SummaryRecipient">Client:</label>

	<label class="col-md-2" for="SummaryRecipient" id="SummaryRecipient" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryRecipientAddress">Client Address:</label>

	<label class="col-md-4" for="SummaryRecipientAddress" id="SummaryRecipientAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFee">Fee:</label>

	<label class="col-md-2" for="SummaryFee" id="SummaryFee" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryLoanPurpose">Loan Purpose:</label>

	<label class="col-md-2" for="SummaryLoanPurpose" id="SummaryLoanPurpose" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryProduct">Product:</label>

	<label class="col-md-2" for="SummaryProduct" id="SummaryProduct" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryAssignedDate">Assigned On:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryAssignedDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryAssignedDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryInspectionDate">Inspection Date:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryInspectionDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryInspectionDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryDueDate">Due By:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryDueDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryDueDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFHACaseNumber">FHA Case Number:</label>

	<label class="col-md-2" for="SummaryFHACaseNumber" id="SummaryFHACaseNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    <section class="client-details">

                        	<label class="control-label col-md-2" for="SummaryLoanNumber">Loan Number:</label>

	<label class="col-md-2" for="SummaryLoanNumber" id="SummaryLoanNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </section>

                </div>

                <section class="lockbox">

                    <div class="row">

                        	<label class="control-label col-md-2" for="SummaryLockBoxCode">Lockbox Code:</label>

	<label class="col-md-2" for="SummaryLockBoxCode" id="SummaryLockBoxCode" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </div>

                </section>

        </div>

                   





					<div class="form-group" id="validationGroup" style="display: none;">

						<div class="col-md-offset-3 col-md-9" style="color: red;">

							<div class="validation-summary-errors">

								<ul></ul>

							</div>

						</div>

					</div>

					<div class="form-group">

	<label class="control-label col-md-3" for="Comment_StandardCommentID">Saved Comments:</label>

	<div class="controls col-md-5">

		<select class="form-control" id="Comment_StandardCommentID" name="Comment.StandardCommentID"><option value="">(Enter Comment Below)</option>

<option value="1">Resend Order Information</option>

<option value="2">Cannot Find Subject Property</option>

<option value="3">Unable to Reach Borrower</option>

<option value="4">Borrower Missed Appointment</option>

<option value="5">Borrower Rescheduled</option>

<option value="6">Borrower Refuses to Permit Appraisal</option>

</select>

	</div>

</div>



					<div class="form-group">

	<label class="control-label col-md-3" for="Comment_Comment">Comment:</label>

	<div class="controls col-md-7">

		<textarea class="form-control" cols="20" id="Comment_Comment" name="Comment.Comment" rows="4" style="resize: none;">

</textarea>

	</div>

</div>



				</form>

			</div>

			<div class="modal-footer">

				<button id="btnAddCommentSubmit" class="btn btn-inverse modal-enter-button enter-button" OnClick="$('#addCommentModal').data('bs.modal').save();">Add Comment</button>

				<button class="btn btn-default" data-dismiss="modal">Cancel</button>

			</div>

		</div>

	</div>

</div>



<script type="text/javascript">



    $(document).ready(function () {



    	$('#addCommentModal').clearvalueaddcommentmodal();

    });



    // ClearValueAddCommentModal : ClearValueModal

    (function ($) {

        'use strict';



        var _orderInfo = null;



        var _parent = $.fn.clearvaluemodal;



        var ClearValueAddCommentModal = function (element, options) {

            _parent.Constructor.apply(this, arguments);



			this.$element.on('show.bs.modal', function () {



                $(this).find(".validation-summary-errors ul li").remove();

                $(this).find("#validationGroup").hide();



                $(this).find(".modal-title").text('Add a Comment - ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID);



                $(this).find("#Comment_StandardCommentID").val('');

                $(this).find("#Comment_StandardCommentID").trigger('change');

                $(this).find("#Comment_Comment").val('');

                $(this).find('#Comment_Comment').prop('disabled', false);



                showOrderSummary($(this), _orderInfo);



			}).on('shown.bs.modal', function () {

            });



			this.$element.find('#Comment_Comment').on('change', function () {

				$(this).val($(this).val().replaceAll('<', ' ['));

				$(this).val($(this).val().replaceAll('>', '] '));

			});

		};



		ClearValueAddCommentModal.DEFAULTS = $.extend({}, _parent.Constructor.DEFAULTS);



        ClearValueAddCommentModal.prototype = $.extend({}, _parent.Constructor.prototype);



        ClearValueAddCommentModal.prototype.clearvaluemodalparent = function () {

            var args = $.makeArray(arguments),

                method = args.shift();

            _parent.Constructor.prototype[method].apply(this, args)

        };



        ClearValueAddCommentModal.prototype.show = function (orderInfo) {

            if (orderInfo) _orderInfo = orderInfo;

            else _orderInfo = new OrderInfo();

            this.clearvaluemodalparent('show');

        };



        ClearValueAddCommentModal.prototype.save = function () {



            var addCommentModal = this;

            var $addCommentModalElement = this.$element;



            $addCommentModalElement.find("#Comment_Comment").blur();



            var isValid = $('#frmAddComment')[0].checkValidity();



            if (isValid) {



                $addCommentModalElement.find('button').prop('disabled', true);

                $addCommentModalElement.find(".validation-summary-errors ul li").remove();

                $addCommentModalElement.find("#validationGroup").hide();



                var url = '/Orders/' + _orderInfo.OrderID + '/Items/' + _orderInfo.OrderItemID + '/Comments';



                spinnerOn();

                $.ajax({

                    url: url,

                    type: 'POST',

                    cache: false,

                    data: $('#frmAddComment').serialize(),

                    contentType: "application/x-www-form-urlencoded",

                    dataType: 'json'

                })

                    .done(function (result) {

                        if (result.OrderID == undefined)

                        	displayValidationErrors(result);

                        else {

                        	addCommentModal.hide();

                        	var successMessage = 'Comment Added to Order ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID;

                        	showResultModal('Add Comment', successMessage, new Array(0));

                        }

                    })

                    .fail(function (jqXHR, textStatus, errorThrown) {

                        spinnerOff();

                        handleException(jqXHR, textStatus, errorThrown);

                    })

                    .always(function () {

                        $addCommentModalElement.find('button').prop('disabled', false);

                        spinnerOff();

                    });

            }

            else

                $("#frmAddComment")[0].reportValidity();

        }



        function displayValidationErrors(result) {

            $('#frmAddComment').find("#validationGroup").show();

            var $list = $('#frmAddComment').find('div.validation-summary-errors ul');

            $list.find('li').remove();

            for (var i = 0; i < result.length; i++)

                $list.append('<li>' + result[i].ErrorMessage + '</li>');

            window.scrollTo(0, document.body.scrollHeight);

        }



        var old = $.fn.clearvalueaddcommentmodal;



        $.fn.clearvalueaddcommentmodal = function (option, _relatedTarget) {

            return this.each(function () {

                var $this = $(this),

                    data = $this.data('bs.modal'),

                    options = $.extend({}, ClearValueAddCommentModal.DEFAULTS, $this.data(), typeof option === 'object' && option);



                if (!data) {

                    $this.data('bs.modal', (data = new ClearValueAddCommentModal(this, options)));

                }

                if (typeof option === 'string') {

                    data[option](_relatedTarget);

                } else if (options.show) {

                    data.show(_relatedTarget);

                }

            });

        };



        $.fn.clearvalueaddcommentmodal.Constructor = ClearValueAddCommentModal;



        $.fn.clearvalueaddcommentmodal.noConflict = function () {

            $.fn.clearvalueaddcommentmodal = old;

            return this;

        };



        $('#addCommentModal #Comment_StandardCommentID').on('change', function () {

            var disabled = ($('#Comment_StandardCommentID').val() != '');

            if (disabled) 

                $('#addCommentModal #Comment_Comment').val('');



            $('#addCommentModal #Comment_Comment').prop('disabled', disabled);

            $('#addCommentModal #Comment_Comment').prop('required', !disabled);

        })



    })(jQuery);



</script>



<div id="setAppointmentModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">

	<div class="modal-dialog modal-lg">

		<div class="modal-content">

			<div class="modal-header">

				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

				<span class="glyphicon glyphicon-minus-sign" style="color: red;"></span>

				<span class="modal-title">Enter an Appointment Time</span>

				<p>

					Please record the scheduled appointment time for this order in the space provided below. The suggested appointment times, if provided by the client, are shown for reference.

				</p>

			</div>

			<div class="modal-body" style="padding-top: 0px; padding-bottom: 0px;">

				<form id="frmSetAppointment" class="form-horizontal">

					<input name="__RequestVerification1Token" type="hidden" value="B2thFoiP22HOZNuxe0R_bH_d4ZaDkVjhwTEvkta0NZD4pllcXGy8V6nWIF7vTimvpzn0xXqcRvCs4rBIQqfkbZVxxbXr_x-8Q5E6pdysIxANDj44rGJwCCLf5xGaXC9QHbnT-w2" />

					

        <div class="order-summary">

                <div class="row">

                     	<label class="control-label col-md-2" for="SummaryOrderKey">Order ID:</label>

	<label class="col-md-2" for="SummaryOrderKey" id="SummaryOrderKey" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                     	<label class="control-label col-md-2" for="SummarySubjectAddress">Subject Address:</label>

	<label class="col-md-4" for="SummarySubjectAddress" id="SummarySubjectAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row client-details">

                    	<label class="control-label col-md-2" for="SummaryRecipient">Client:</label>

	<label class="col-md-2" for="SummaryRecipient" id="SummaryRecipient" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryRecipientAddress">Client Address:</label>

	<label class="col-md-4" for="SummaryRecipientAddress" id="SummaryRecipientAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFee">Fee:</label>

	<label class="col-md-2" for="SummaryFee" id="SummaryFee" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryLoanPurpose">Loan Purpose:</label>

	<label class="col-md-2" for="SummaryLoanPurpose" id="SummaryLoanPurpose" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryProduct">Product:</label>

	<label class="col-md-2" for="SummaryProduct" id="SummaryProduct" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryAssignedDate">Assigned On:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryAssignedDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryAssignedDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryInspectionDate">Inspection Date:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryInspectionDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryInspectionDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryDueDate">Due By:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryDueDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryDueDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFHACaseNumber">FHA Case Number:</label>

	<label class="col-md-2" for="SummaryFHACaseNumber" id="SummaryFHACaseNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    <section class="client-details">

                        	<label class="control-label col-md-2" for="SummaryLoanNumber">Loan Number:</label>

	<label class="col-md-2" for="SummaryLoanNumber" id="SummaryLoanNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </section>

                </div>

                <section class="lockbox">

                    <div class="row">

                        	<label class="control-label col-md-2" for="SummaryLockBoxCode">Lockbox Code:</label>

	<label class="col-md-2" for="SummaryLockBoxCode" id="SummaryLockBoxCode" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </div>

                </section>

        </div>

                   





					<div class="form-group" id="validationGroup" style="display: none;">

						<div class="col-md-offset-4 col-md-8" style="color: red;">

							<div class="validation-summary-errors">

								<ul></ul>

							</div>

						</div>

					</div>

					<div id="suppliedAptSection">

						<div class="alert alert-info">

							<strong>Note:</strong>

							The client has supplied one or more appointment times when access to the subject property can be arranged.  When possible, please select one of the suggested times.

						</div>

						<div class='form-group'>

	<label class="control-label col-md-4" for="suggestedTime1">Suggested Scheduling Time 1:</label>

	<label class="col-md-8" style="font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" ><time id="suggestedTime1" datetime="" data-date-format="MM/DD/YYYY"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#suggestedTime1');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>

</div>



						<div class='form-group'>

	<label class="control-label col-md-4" for="suggestedTime2">Suggested Scheduling Time 2:</label>

	<label class="col-md-8" style="font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" ><time id="suggestedTime2" datetime="" data-date-format="MM/DD/YYYY"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#suggestedTime2');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>

</div>



					</div>

					<div class='form-group'>

	<label class="control-label col-md-4" for="scheduledAppointmentTime">Scheduled Date/Time:</label>

	<div class='controls col-md-6'>

	<div class='input-group date' id='scheduledAppointmentTime_39147dbe-e58b-4065-ab1a-490c895768c5'>

		<input class="form-control" id="scheduledAppointmentTime" name="scheduledAppointmentTime" required="required" type="text" value="" />

		<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>		</span>	</div>

	</div>

</div>

	<script type='text/javascript'>

		$(document).ready(function() {

		$('#scheduledAppointmentTime_39147dbe-e58b-4065-ab1a-490c895768c5').datetimepicker({ format: 'MM/DD/YYYY h:mm A', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });

		$('#scheduledAppointmentTime_39147dbe-e58b-4065-ab1a-490c895768c5').on('dp.change', function() {

			var inputElement = $('#scheduledAppointmentTime')[0];

			if (inputElement.setCustomValidity)

				inputElement.setCustomValidity('');

		});

		$('#scheduledAppointmentTime').on('keyup', function() {

			if (this.setCustomValidity)

				this.setCustomValidity('');

		});


	});

</script>



					<div class="form-group">

	<label class="control-label col-md-4" for="scheduledAppointmentTimeZone">Scheduled Time Zone:</label>

	<div class="controls col-md-6">

		<select class="form-control" id="scheduledAppointmentTimeZone" name="scheduledAppointmentTimeZone" required="required"></select>

	</div>

</div>



					<div id="setAppointmentWarning" class="alert alert-warning">

						<strong>Warning:</strong>

						The scheduled date and time is different than what was suggested by the client.

					</div>

				</form>

			</div>

			<div class="modal-footer">

				<button id="btnSetAppointmentSubmit" class="btn btn-inverse modal-enter-button enter-button" OnClick="$('#setAppointmentModal').data('bs.modal').save();">Set Appointment</button>

				<button class="btn btn-default" data-dismiss="modal">Cancel</button>

			</div>

		</div>

	</div>

</div>



<script type="text/javascript">



    $(document).ready(function () {



    	$('#setAppointmentModal').clearvaluesetappointmentmodal();

    });



    // ClearValueSetAppointmentModal : ClearValueModal

    (function ($) {

        'use strict';



        var _orderInfo = null;



        var _parent = $.fn.clearvaluemodal;



        var ClearValueSetAppointmentModal = function (element, options) {

            _parent.Constructor.apply(this, arguments);



			populateTimeZoneDropDown('scheduledAppointmentTimeZone');



        this.$element.on('show.bs.modal', function () {

            $(this).find(".validation-summary-errors ul li").remove();

            $(this).find("#validationGroup").hide();



            $(this).find(".modal-title").text('Set Appointment Time - ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID);



			if (_orderInfo.InspectionDate == '')

				$(this).find('#scheduledAppointmentTime').closest('div.date').data('DateTimePicker').date(null);

			else

				$(this).find('#scheduledAppointmentTime').closest('div.date').data('DateTimePicker').date(_orderInfo.InspectionDate);



			$(this).find('#scheduledAppointmentTimeZone').val(getLocalTimeZone());



                if (isEmpty(_orderInfo.SuppliedApptTime1))

                	$(this).find('#suppliedAptSection').hide();

                else

                	$(this).find('#suppliedAptSection').show();



                if (isEmpty(_orderInfo.SuppliedApptTime2))

                	$(this).find('#suggestedTime2').parent().hide();

                else

                	$(this).find('#suggestedTime2').parent().show();



                $(this).find('#suggestedTime1').text(displaySuppliedTime(_orderInfo.SuppliedApptTime1, _orderInfo.SuppliedApptEndTime1));

                $(this).find('#suggestedTime2').text(displaySuppliedTime(_orderInfo.SuppliedApptTime2, _orderInfo.SuppliedApptEndTime2));

                showOrderSummary($(this), _orderInfo);



				toggleWarning($('#scheduledAppointmentTime').closest('div.date').data('DateTimePicker').format(), _orderInfo.SuppliedApptTime1, _orderInfo.SuppliedApptTime2, _orderInfo.SuppliedApptEndTime1, _orderInfo.SuppliedApptEndTime2);



            }).on('shown.bs.modal', function () {

            });

		};



		ClearValueSetAppointmentModal.DEFAULTS = $.extend({}, _parent.Constructor.DEFAULTS);



        ClearValueSetAppointmentModal.prototype = $.extend({}, _parent.Constructor.prototype);



        ClearValueSetAppointmentModal.prototype.clearvaluemodalparent = function () {

            var args = $.makeArray(arguments),

                method = args.shift();

            _parent.Constructor.prototype[method].apply(this, args)

        };



		ClearValueSetAppointmentModal.prototype.show = function (orderInfo) {

            if (orderInfo) _orderInfo = orderInfo;

            else _orderInfo = new OrderInfo();

            this.clearvaluemodalparent('show');

        };



        ClearValueSetAppointmentModal.prototype.save = function () {



            var setAppointmentModal = this;

            var $setAppointmentModalElement = this.$element;



            $setAppointmentModalElement.find("#scheduledAppointmentTime").blur();



            var isValid = $('#frmSetAppointment')[0].checkValidity();



            if (isValid) {



                $setAppointmentModalElement.find('button').prop('disabled', true);

                $setAppointmentModalElement.find(".validation-summary-errors ul li").remove();

                $setAppointmentModalElement.find("#validationGroup").hide();



				var newDateString = adjustForTimeZone($('#scheduledAppointmentTime').closest('div.date').data('DateTimePicker').date(), $('#scheduledAppointmentTimeZone').val());



                var url = '/Orders/' + _orderInfo.OrderID + '/Items/' + _orderInfo.OrderItemID + '/SetAppointment';

                var data = $('#frmSetAppointment').serializeArray();

                for (var i = 0; i < data.length; i++)

                    if (data[i].name == 'scheduledAppointmentTime') {

						data[i].value = newDateString;

                    }            	

                spinnerOn();

                $.ajax({

                    url: url,

                    type: 'POST',

                    cache: false,

                    data: data,

                    contentType: "application/x-www-form-urlencoded",

                    dataType: 'json'

                })

                    .done(function (result) {

                        if (result.OrderID == undefined)

                        	displayValidationErrors(result);

                        else {

                        	setAppointmentModal.hide();

                        	var successMessage = 'Appointment Scheduled for Order ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID

							showResultModal('Set Appointment', successMessage, new Array(0));

							$setAppointmentModalElement.trigger('done.cvc.bs.modal', [newDateString, moment.tz(newDateString,moment.tz.guess()).format('MM/DD/YYYY h:mm A z')]);

                        }

                    })

                    .fail(function (jqXHR, textStatus, errorThrown) {

                        spinnerOff();

                        handleException(jqXHR, textStatus, errorThrown);

                    })

                    .always(function () {

                        $setAppointmentModalElement.find('button').prop('disabled', false);

                        spinnerOff();

                    });

            }

            else

                $("#frmSetAppointment")[0].reportValidity();

        }



        function displayValidationErrors(result) {

            $('#frmSetAppointment').find("#validationGroup").show();

            var $list = $('#frmSetAppointment').find('div.validation-summary-errors ul');

            $list.find('li').remove();

            for (var i = 0; i < result.length; i++)

                $list.append('<li>' + result[i].ErrorMessage + '</li>');

            window.scrollTo(0, document.body.scrollHeight);

        }



        var old = $.fn.clearvaluesetappointmentmodal;



        $.fn.clearvaluesetappointmentmodal = function (option, _relatedTarget) {

            return this.each(function () {

                var $this = $(this),

                    data = $this.data('bs.modal'),

                    options = $.extend({}, ClearValueSetAppointmentModal.DEFAULTS, $this.data(), typeof option === 'object' && option);



                if (!data) {

                    $this.data('bs.modal', (data = new ClearValueSetAppointmentModal(this, options)));

                }

                if (typeof option === 'string') {

                    data[option](_relatedTarget);

                } else if (options.show) {

                    data.show(_relatedTarget);

                }

            });

        };



        $.fn.clearvaluesetappointmentmodal.Constructor = ClearValueSetAppointmentModal;



        $.fn.clearvaluesetappointmentmodal.noConflict = function () {

            $.fn.clearvaluesetappointmentmodal = old;

            return this;

        };



        $('#scheduledAppointmentTime').on('input dp.change', function () {

        	toggleWarning($('#scheduledAppointmentTime').val(), _orderInfo.SuppliedApptTime1, _orderInfo.SuppliedApptTime2, _orderInfo.SuppliedApptEndTime1, _orderInfo.SuppliedApptEndTime2);

        })



        $('#frmSetAppointment').on('DOMNodeInserted', '.bootstrap-datetimepicker-widget', function () {

        	toggleWarning($('#scheduledAppointmentTime').val(), _orderInfo.SuppliedApptTime1, _orderInfo.SuppliedApptTime2, _orderInfo.SuppliedApptEndTime1, _orderInfo.SuppliedApptEndTime2);

        })



    })(jQuery);



	function formatAMPM(date) {

		var hours = date.getHours();

		var minutes = date.getMinutes();

		var ampm = hours >= 12 ? 'PM' : 'AM';

		hours = hours % 12;

		hours = hours ? hours : 12; // the hour '0' should be '12'

		minutes = minutes < 10 ? '0' + minutes : minutes;

		var strTime = hours + ':' + minutes + ' ' + ampm;

		return strTime;

	}



	function displaySuppliedTime(suppliedTime, suppliedEndTime) {

		var displayTime = '';

		if (!isEmpty(suppliedTime)) {

			if (!isEmpty(suppliedEndTime)) {

                displayTime = ' Between ' + moment.tz(suppliedTime, moment.tz.guess()).format('M/D/YYYY hh:mm A z') + ' and ' + moment.tz(suppliedEndTime, moment.tz.guess()).format('M/D/YYYY hh:mm A z');

            }

            else

                displayTime = moment.tz(suppliedTime, moment.tz.guess()).format('M/D/YYYY hh:mm A z');

		}

		return displayTime;

	}



	function toggleWarning(scheduledDate, time1, time2, time1end, time2end) {

		if (isEmpty(time1) && isEmpty(time2)) {

			$('#setAppointmentWarning').hide();

			return;

		}



		var newScheduledDate = new Date(scheduledDate).getTime();

		var newTime1 = new Date(time1).getTime();

		var newTime2 = new Date(time2).getTime();

		var newTime1End = new Date(time1end).getTime();

		var newTime2End = new Date(time2end).getTime();

		var showWarning = (isEmpty(time1end) && isEmpty(time2end) && newScheduledDate !== newTime1 && newScheduledDate !== newTime2) ||

						  (!isEmpty(time1end) && isEmpty(time2end) && (newTime1 > newScheduledDate || newTime1End < newScheduledDate)) ||

						  (!isEmpty(time2end) && isEmpty(time1end) && (newTime2 > newScheduledDate || newTime2End < newScheduledDate)) ||

						  (!isEmpty(time1end) && !isEmpty(time2end) && (newTime1 > newScheduledDate || newTime1End < newScheduledDate) && (newTime2 > newScheduledDate || newTime2End < newScheduledDate))

		

		if (showWarning)

			$('#setAppointmentWarning').show();

		else

			$('#setAppointmentWarning').hide();

	}



	function isEmpty(object) {

		return object === undefined || object == null || object === '';

	}



</script>



<div id="confirmAppointmentModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">

	<div class="modal-dialog modal-lg">

		<div class="modal-content">

			<div class="modal-header">

				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

				<span class="glyphicon glyphicon-minus-sign" style="color: red;"></span>

				<span class="modal-title">Confirm Appointment</span>

				<p>

					The client placing this order has requested that you confirm the inspection appointment with the access contact in advance. You are also asked to verify when this has taken place. You may click on the Confirm button below when you have completed this task.

				</p>

			</div>

			<div class="modal-body" style="padding-top: 0px; padding-bottom: 0px;">

				<form id="frmConfirmAppointment" class="form-horizontal">

                    <input name="__RequestVerification1Token" type="hidden" value="_QDEai94qdRhDG8eSLEijG8iw41moYV3ADrxIYdYOsGsobpegjpiONbpHRNjCdxK31068u8e06KSYeHih3IcqRn8y93G76KMzi0i2ymdHHqwozf_aYdfWWKML99LQA_4WBQU3A2" />

					

        <div class="order-summary">

                <div class="row">

                     	<label class="control-label col-md-2" for="SummaryOrderKey">Order ID:</label>

	<label class="col-md-2" for="SummaryOrderKey" id="SummaryOrderKey" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                     	<label class="control-label col-md-2" for="SummarySubjectAddress">Subject Address:</label>

	<label class="col-md-4" for="SummarySubjectAddress" id="SummarySubjectAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row client-details">

                    	<label class="control-label col-md-2" for="SummaryRecipient">Client:</label>

	<label class="col-md-2" for="SummaryRecipient" id="SummaryRecipient" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryRecipientAddress">Client Address:</label>

	<label class="col-md-4" for="SummaryRecipientAddress" id="SummaryRecipientAddress" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFee">Fee:</label>

	<label class="col-md-2" for="SummaryFee" id="SummaryFee" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryLoanPurpose">Loan Purpose:</label>

	<label class="col-md-2" for="SummaryLoanPurpose" id="SummaryLoanPurpose" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    	<label class="control-label col-md-2" for="SummaryProduct">Product:</label>

	<label class="col-md-2" for="SummaryProduct" id="SummaryProduct" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryAssignedDate">Assigned On:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryAssignedDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryAssignedDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryInspectionDate">Inspection Date:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryInspectionDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryInspectionDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                    	<label class="control-label col-md-2" for="SummaryDueDate">Due By:</label>

	<label style="padding-right:0px;font-weight:normal;padding-top:7px;margin-top:0px;margin-bottom:0px;" class="col-md-2" ><time id="SummaryDueDate" datetime="" data-date-format="MM/DD/YYYY h:mm A z"></time></label>

	<script type='text/javascript'>

		$(document).ready(function() {

			var timeId = $('#SummaryDueDate');

			var time = timeId.attr("datetime");

			var format = timeId.data("date-format");

			var m = moment.tz(time, moment.tz.guess());

			if (m.isValid())

				timeId.text(m.format(format));

			else

				timeId.text(time);

			timeId.attr('data-moment-object', m);

		});

	</script>



                </div>

                <div class="row">

                    	<label class="control-label col-md-2" for="SummaryFHACaseNumber">FHA Case Number:</label>

	<label class="col-md-2" for="SummaryFHACaseNumber" id="SummaryFHACaseNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    <section class="client-details">

                        	<label class="control-label col-md-2" for="SummaryLoanNumber">Loan Number:</label>

	<label class="col-md-2" for="SummaryLoanNumber" id="SummaryLoanNumber" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </section>

                </div>

                <section class="lockbox">

                    <div class="row">

                        	<label class="control-label col-md-2" for="SummaryLockBoxCode">Lockbox Code:</label>

	<label class="col-md-2" for="SummaryLockBoxCode" id="SummaryLockBoxCode" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">     </label>



                    </div>

                </section>

        </div>

                   





					<div class="form-group" id="validationGroup" style="display: none;">

						<div class="col-md-offset-3 col-md-9" style="color: red;">

							<div class="validation-summary-errors">

								<ul></ul>

							</div>

						</div>

					</div>

					<div class="form-group">

						<div class="col-md-10" style="padding-left: 30px;">

							<input id="Confirm" name="Confirm" type="checkbox" value="true" /><input name="Confirm" type="hidden" value="false" /><span class="checkbox-label"> I have verified the inspection appointment time with access contact in advance.</span>

						</div>

					</div>

				</form>

			</div>

			<div class="modal-footer">

				<button id="btnConfirmAppointmentSubmit" disabled class="btn btn-inverse modal-enter-button enter-button" OnClick="$('#confirmAppointmentModal').data('bs.modal').save();">Confirm Appointment</button>

				<button class="btn btn-default" data-dismiss="modal">Cancel</button>

			</div>

		</div>

	</div>

</div>



<script type="text/javascript">



    $(document).ready(function () {



    	$('#confirmAppointmentModal').clearvalueconfirmappointmentmodal();



    });



    // ClearValueConfirmAppointmentModal : ClearValueModal

    (function ($) {

        'use strict';



        var _orderInfo = null;



        var _parent = $.fn.clearvaluemodal;



        var ClearValueConfirmAppointmentModal = function (element, options) {

            _parent.Constructor.apply(this, arguments);



        this.$element.on('show.bs.modal', function () {



                $(this).find(".validation-summary-errors ul li").remove();

                $(this).find("#validationGroup").hide();



                $(this).find(".modal-title").text('Confirm Appointment Time - ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID);



                $(this).find('#Confirm').prop('checked', false);

                $(this).find('#btnConfirmAppointmentSubmit').prop('disabled', true);



                showOrderSummary($(this), _orderInfo);



            }).on('shown.bs.modal', function () {

            });

        };



        $('#confirmAppointmentModal #Confirm').on('change', function () {

            var enableSubmit = $(this).is(':checked');

            $('#confirmAppointmentModal #btnConfirmAppointmentSubmit').prop('disabled', !enableSubmit);

		})



		ClearValueConfirmAppointmentModal.DEFAULTS = $.extend({}, _parent.Constructor.DEFAULTS);



        ClearValueConfirmAppointmentModal.prototype = $.extend({}, _parent.Constructor.prototype);



        ClearValueConfirmAppointmentModal.prototype.clearvaluemodalparent = function () {

            var args = $.makeArray(arguments),

                method = args.shift();

            _parent.Constructor.prototype[method].apply(this, args)

        };



        ClearValueConfirmAppointmentModal.prototype.show = function (orderInfo) {

        	if (orderInfo) _orderInfo = orderInfo;

        	else _orderInfo = new OrderInfo();

            this.clearvaluemodalparent('show');

        };



        ClearValueConfirmAppointmentModal.prototype.save = function () {



            var confirmAppointmentModal = this;

            var $confirmAppointmentModalElement = this.$element;



            $confirmAppointmentModalElement.find('button').prop('disabled', true);

            $confirmAppointmentModalElement.find(".validation-summary-errors ul li").remove();

            $confirmAppointmentModalElement.find("#validationGroup").hide();



            var url = '/Orders/' + _orderInfo.OrderID + '/Items/' + _orderInfo.OrderItemID + '/ConfirmAppointment';



            spinnerOn();

            $.ajax({

                url: url,

                type: 'POST',

                cache: false,

                data: $('#frmConfirmAppointment').serialize(),

                contentType: "application/x-www-form-urlencoded",

                dataType: 'json'

            })

            .done(function (result) {

                if (result.OrderID == undefined)

                    displayValidationErrors(result);

                else {

                	confirmAppointmentModal.hide();

                	var successMessage = 'Appointment Confirmed for Order ' + _orderInfo.OrderID + '.' + _orderInfo.OrderItemID;

                	showResultModal('Confirm Appointment', successMessage, new Array(0));

                    $confirmAppointmentModalElement.trigger('done.cvc.bs.modal', successMessage);

                }

            })

            .fail(function (jqXHR, textStatus, errorThrown) {

                spinnerOff();

                handleException(jqXHR, textStatus, errorThrown);

            })

            .always(function () {

                $confirmAppointmentModalElement.find('button').prop('disabled', false);

                spinnerOff();

            });

        }



        function displayValidationErrors(result) {

            $('#frmConfirmAppointment').find("#validationGroup").show();

            var $list = $('#frmConfirmAppointment').find('div.validation-summary-errors ul');

            $list.find('li').remove();

            for (var i = 0; i < result.length; i++)

                $list.append('<li>' + result[i].ErrorMessage + '</li>');

            window.scrollTo(0, document.body.scrollHeight);

        }



        var old = $.fn.clearvalueconfirmappointmentmodal;



        $.fn.clearvalueconfirmappointmentmodal = function (option, _relatedTarget) {

            return this.each(function () {

                var $this = $(this),

                    data = $this.data('bs.modal'),

                    options = $.extend({}, ClearValueConfirmAppointmentModal.DEFAULTS, $this.data(), typeof option === 'object' && option);



                if (!data) {

                    $this.data('bs.modal', (data = new ClearValueConfirmAppointmentModal(this, options)));

                }

                if (typeof option === 'string') {

                    data[option](_relatedTarget);

                } else if (options.show) {

                    data.show(_relatedTarget);

                }

            });

        };



        $.fn.clearvalueconfirmappointmentmodal.Constructor = ClearValueConfirmAppointmentModal;



        $.fn.clearvalueconfirmappointmentmodal.noConflict = function () {

            $.fn.clearvalueconfirmappointmentmodal = old;

            return this;

        };



    })(jQuery);



</script>



<script type="text/javascript">



    $(document).ready(function () {



        $('#ordersTabs a[data-toggle="tab"]').on('shown.bs.tab', function (e) {

            var target = $(e.target).attr("href");

            $(target).trigger('parentResize.cvc');

        });



        $(window).bind('resize', function () { resizeTabPanel(); }).resize();



        $('#messages .alert').on('closed.bs.alert', function () {

        	var newHeight = $("div#messages").outerHeight(true) - $(this).outerHeight(true);

        	$("div#messages").outerHeight(newHeight, true);

        	resizeTabPanel();

        });





    });



    function displayMap(gridID, orderKey) {

        var row = $('#' + gridID).getRowData(orderKey);



        $('#displayMapModal').data('bs.modal').show(row.OrderID, row.OrderItemID);

    }



    function resizeTabPanel() {



        // set the searchContent div height

        var headerHeight = ($("div#headerToolbar").outerHeight(true) == undefined) ? 0 : $("div#headerToolbar").outerHeight(true);

        var logoHeight = ($("div#logoHeader").outerHeight(true) == undefined) ? 0 : $("div#logoHeader").outerHeight(true);

        var messagesHeight = ($("div#messages").outerHeight(true) == undefined) ? 0 : $("div#messages").outerHeight(true);

        var newHeight = 0;



        newHeight = $(this).innerHeight() - (headerHeight + logoHeight + messagesHeight);



        $("div#ordersTabs").outerHeight(newHeight, true);



        var tabHeight = $('div#ordersTabs ul.nav-tabs').outerHeight(true);

        var availableHeight = $("div#ordersTabs").innerHeight();



        var newHeight = availableHeight - tabHeight;

        //if (newHeight < 500)

        //    $('div#vendorTabs div.tab-content').css('overflow-y', 'auto');

        //else

        //    $('div#vendorTabs div.tab-content').css('overflow-y', 'hidden');



        $('div#ordersTabs div.tab-content').outerHeight(newHeight, true);

        $('div#ordersTabs .tab-pane').outerHeight($('div#ordersTabs div.tab-content').innerHeight(), true);



        $('div#ordersTabs .tab-pane').trigger('parentResize.cvc');

    }



</script>





    </div>



    



    

    <form id="__AjaxAntiForgeryForm" action="#" method="post" class="hidden"><input name="__RequestVerification1Token" type="hidden" value="EvyNMGt08-s9M018a4PiY0DoslwzSBUa68v5ke5L28ME-nILbG9niVI_-SFQY_ZA7tlhpW5CuxBG1KZRVJj4UHDlQ9chGZLVpwzxstxjqupwgp4sz6zlJqCoC5CEhsO2TResLA2" /></form>

</body>